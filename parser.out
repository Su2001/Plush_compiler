Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> excute_list
Rule 2     excute_list -> excute_list_end
Rule 3     excute_list -> excute_list_iter
Rule 4     excute_list_iter -> excute_list excute_node
Rule 5     excute_list_end -> excute_node
Rule 6     excute_node -> variable_declaration
Rule 7     excute_node -> function_dec
Rule 8     variable_declaration -> VAR declaration END
Rule 9     variable_declaration -> VAL declaration END
Rule 10    declaration -> ID DEF type liquid_type
Rule 11    liquid_type -> LPAREN expression RPAREN give_value
Rule 12    liquid_type -> give_value
Rule 13    give_value -> ASSIGN value
Rule 14    give_value -> <empty>
Rule 15    type -> INT
Rule 16    type -> FLOAT
Rule 17    type -> STRING
Rule 18    type -> BOOL
Rule 19    type -> VOID
Rule 20    type -> CHAR
Rule 21    type -> LSQBRAC type RSQBRAC
Rule 22    value -> expression
Rule 23    value -> stringv
Rule 24    value -> charv
Rule 25    value -> NEWARRAY LSQBRAC expression RSQBRAC ps
Rule 26    value -> <empty>
Rule 27    ps -> LSQBRAC expression RSQBRAC ps
Rule 28    ps -> <empty>
Rule 29    array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value
Rule 30    array_or_func -> assgn_statement_or_func_call
Rule 31    array_or_func -> <empty>
Rule 32    assg_arr_value -> give_value
Rule 33    assg_arr_value -> array_or_func
Rule 34    assg_arr_value -> <empty>
Rule 35    expression -> expression_v PLUS expression
Rule 36    expression -> expression_v MINUS expression
Rule 37    expression -> expression_v TIMES expression
Rule 38    expression -> expression_v DIVIDE expression
Rule 39    expression -> expression_v MOD expression
Rule 40    expression -> expression_v MUL expression
Rule 41    expression -> expression_v
Rule 42    expression -> unary_minus_exp
Rule 43    unary_minus_exp -> MINUS expression
Rule 44    expression_v -> LPAREN expression RPAREN
Rule 45    expression_v -> number
Rule 46    expression_v -> real
Rule 47    expression_v -> boolv
Rule 48    expression_v -> ID array_or_func
Rule 49    stringv -> STRINGV
Rule 50    charv -> CHARV
Rule 51    number -> NUMBER
Rule 52    real -> REAL
Rule 53    boolv -> BOOLV
Rule 54    expression -> expression OR expression
Rule 55    expression -> expression AND expression
Rule 56    expression -> NEG expression
Rule 57    expression -> expression GT expression
Rule 58    expression -> expression GTEQ expression
Rule 59    expression -> expression LT expression
Rule 60    expression -> expression LTEQ expression
Rule 61    expression -> expression EQ expression
Rule 62    expression -> expression NEQ expression
Rule 63    function_dec -> FUNCTION ID field_list with_type_or_not with_body_or_not
Rule 64    with_type_or_not -> DEF type
Rule 65    with_type_or_not -> <empty>
Rule 66    with_body_or_not -> function_dec_no_body
Rule 67    with_body_or_not -> function_dec_with_body
Rule 68    function_dec_with_body -> LCBRAC body RCBRAC
Rule 69    function_dec_no_body -> END
Rule 70    field_list -> LPAREN empty_or_field RPAREN
Rule 71    empty_or_field -> empty_list
Rule 72    empty_or_field -> ne_field_list
Rule 73    ne_field_list -> ne_field_list_end
Rule 74    ne_field_list -> ne_field_list_iter
Rule 75    ne_field_list_iter -> ne_field_list COMMA field
Rule 76    ne_field_list_end -> field
Rule 77    field -> VAL ID DEF type
Rule 78    field -> VAR ID DEF type
Rule 79    body -> statement_list
Rule 80    statement_list -> statement_list_end
Rule 81    statement_list -> statement_list_iter
Rule 82    statement_list_iter -> statement_list statement
Rule 83    statement_list_end -> statement
Rule 84    statement -> variable_declaration
Rule 85    statement -> value END
Rule 86    statement -> if_statement
Rule 87    statement -> while_statement
Rule 88    assgn_statement_or_func_call -> assignment_statement
Rule 89    assgn_statement_or_func_call -> procedure_or_function_call
Rule 90    assignment_statement -> give_value
Rule 91    procedure_or_function_call -> param_list
Rule 92    param_list -> LPAREN empty_or_param RPAREN
Rule 93    empty_or_param -> ne_param_list
Rule 94    ne_param_list -> ne_param_list_end
Rule 95    ne_param_list -> ne_param_list_iter
Rule 96    ne_param_list_iter -> empty_or_param COMMA value
Rule 97    ne_param_list_end -> value
Rule 98    if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement
Rule 99    else_statement -> ELSE else_or_if
Rule 100   else_statement -> <empty>
Rule 101   else_or_if -> LCBRAC statement_list RCBRAC
Rule 102   else_or_if -> if_statement
Rule 103   while_statement -> WHILE expression LCBRAC statement_list RCBRAC
Rule 104   empty -> <empty>
Rule 105   empty_list -> empty

Terminals, with rules where they appear

AND                  : 55
ASSIGN               : 13
BOOL                 : 18
BOOLV                : 53
CHAR                 : 20
CHARV                : 50
COMMA                : 75 96
DEF                  : 10 64 77 78
DIVIDE               : 38
ELSE                 : 99
END                  : 8 9 69 85
EQ                   : 61
FLOAT                : 16
FUNCTION             : 63
GT                   : 57
GTEQ                 : 58
ID                   : 10 48 63 77 78
IF                   : 98
INT                  : 15
LCBRAC               : 68 98 101 103
LPAREN               : 11 44 70 92
LSQBRAC              : 21 25 27 29
LT                   : 59
LTEQ                 : 60
MINUS                : 36 43
MOD                  : 39
MUL                  : 40
NEG                  : 56
NEQ                  : 62
NEWARRAY             : 25
NUMBER               : 51
OR                   : 54
PLUS                 : 35
RCBRAC               : 68 98 101 103
REAL                 : 52
RPAREN               : 11 44 70 92
RSQBRAC              : 21 25 27 29
STRING               : 17
STRINGV              : 49
TIMES                : 37
VAL                  : 9 77
VAR                  : 8 78
VOID                 : 19
WHILE                : 103
error                : 

Nonterminals, with rules where they appear

array_or_func        : 33 48
assg_arr_value       : 29
assgn_statement_or_func_call : 30
assignment_statement : 88
body                 : 68
boolv                : 47
charv                : 24
declaration          : 8 9
else_or_if           : 99
else_statement       : 98
empty                : 105
empty_list           : 71
empty_or_field       : 70
empty_or_param       : 92 96
excute_list          : 1 4
excute_list_end      : 2
excute_list_iter     : 3
excute_node          : 4 5
expression           : 11 22 25 27 29 35 36 37 38 39 40 43 44 54 54 55 55 56 57 57 58 58 59 59 60 60 61 61 62 62 98 103
expression_v         : 35 36 37 38 39 40 41
field                : 75 76
field_list           : 63
function_dec         : 7
function_dec_no_body : 66
function_dec_with_body : 67
give_value           : 11 12 32 90
if_statement         : 86 102
liquid_type          : 10
ne_field_list        : 72 75
ne_field_list_end    : 73
ne_field_list_iter   : 74
ne_param_list        : 93
ne_param_list_end    : 94
ne_param_list_iter   : 95
number               : 45
param_list           : 91
procedure_or_function_call : 89
ps                   : 25 27
real                 : 46
start                : 0
statement            : 82 83
statement_list       : 79 82 98 101 103
statement_list_end   : 80
statement_list_iter  : 81
stringv              : 23
type                 : 10 21 64 77 78
unary_minus_exp      : 42
value                : 13 85 96 97
variable_declaration : 6 84
while_statement      : 87
with_body_or_not     : 63
with_type_or_not     : 63

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . excute_list
    (2) excute_list -> . excute_list_end
    (3) excute_list -> . excute_list_iter
    (5) excute_list_end -> . excute_node
    (4) excute_list_iter -> . excute_list excute_node
    (6) excute_node -> . variable_declaration
    (7) excute_node -> . function_dec
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (63) function_dec -> . FUNCTION ID field_list with_type_or_not with_body_or_not

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    FUNCTION        shift and go to state 10

    start                          shift and go to state 1
    excute_list                    shift and go to state 2
    excute_list_end                shift and go to state 3
    excute_list_iter               shift and go to state 4
    excute_node                    shift and go to state 5
    variable_declaration           shift and go to state 6
    function_dec                   shift and go to state 7

state 1

    (0) S' -> start .



state 2

    (1) start -> excute_list .
    (4) excute_list_iter -> excute_list . excute_node
    (6) excute_node -> . variable_declaration
    (7) excute_node -> . function_dec
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (63) function_dec -> . FUNCTION ID field_list with_type_or_not with_body_or_not

    $end            reduce using rule 1 (start -> excute_list .)
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    FUNCTION        shift and go to state 10

    excute_node                    shift and go to state 11
    variable_declaration           shift and go to state 6
    function_dec                   shift and go to state 7

state 3

    (2) excute_list -> excute_list_end .

    VAR             reduce using rule 2 (excute_list -> excute_list_end .)
    VAL             reduce using rule 2 (excute_list -> excute_list_end .)
    FUNCTION        reduce using rule 2 (excute_list -> excute_list_end .)
    $end            reduce using rule 2 (excute_list -> excute_list_end .)


state 4

    (3) excute_list -> excute_list_iter .

    VAR             reduce using rule 3 (excute_list -> excute_list_iter .)
    VAL             reduce using rule 3 (excute_list -> excute_list_iter .)
    FUNCTION        reduce using rule 3 (excute_list -> excute_list_iter .)
    $end            reduce using rule 3 (excute_list -> excute_list_iter .)


state 5

    (5) excute_list_end -> excute_node .

    VAR             reduce using rule 5 (excute_list_end -> excute_node .)
    VAL             reduce using rule 5 (excute_list_end -> excute_node .)
    FUNCTION        reduce using rule 5 (excute_list_end -> excute_node .)
    $end            reduce using rule 5 (excute_list_end -> excute_node .)


state 6

    (6) excute_node -> variable_declaration .

    VAR             reduce using rule 6 (excute_node -> variable_declaration .)
    VAL             reduce using rule 6 (excute_node -> variable_declaration .)
    FUNCTION        reduce using rule 6 (excute_node -> variable_declaration .)
    $end            reduce using rule 6 (excute_node -> variable_declaration .)


state 7

    (7) excute_node -> function_dec .

    VAR             reduce using rule 7 (excute_node -> function_dec .)
    VAL             reduce using rule 7 (excute_node -> function_dec .)
    FUNCTION        reduce using rule 7 (excute_node -> function_dec .)
    $end            reduce using rule 7 (excute_node -> function_dec .)


state 8

    (8) variable_declaration -> VAR . declaration END
    (10) declaration -> . ID DEF type liquid_type

    ID              shift and go to state 13

    declaration                    shift and go to state 12

state 9

    (9) variable_declaration -> VAL . declaration END
    (10) declaration -> . ID DEF type liquid_type

    ID              shift and go to state 13

    declaration                    shift and go to state 14

state 10

    (63) function_dec -> FUNCTION . ID field_list with_type_or_not with_body_or_not

    ID              shift and go to state 15


state 11

    (4) excute_list_iter -> excute_list excute_node .

    VAR             reduce using rule 4 (excute_list_iter -> excute_list excute_node .)
    VAL             reduce using rule 4 (excute_list_iter -> excute_list excute_node .)
    FUNCTION        reduce using rule 4 (excute_list_iter -> excute_list excute_node .)
    $end            reduce using rule 4 (excute_list_iter -> excute_list excute_node .)


state 12

    (8) variable_declaration -> VAR declaration . END

    END             shift and go to state 16


state 13

    (10) declaration -> ID . DEF type liquid_type

    DEF             shift and go to state 17


state 14

    (9) variable_declaration -> VAL declaration . END

    END             shift and go to state 18


state 15

    (63) function_dec -> FUNCTION ID . field_list with_type_or_not with_body_or_not
    (70) field_list -> . LPAREN empty_or_field RPAREN

    LPAREN          shift and go to state 20

    field_list                     shift and go to state 19

state 16

    (8) variable_declaration -> VAR declaration END .

    VAR             reduce using rule 8 (variable_declaration -> VAR declaration END .)
    VAL             reduce using rule 8 (variable_declaration -> VAR declaration END .)
    FUNCTION        reduce using rule 8 (variable_declaration -> VAR declaration END .)
    $end            reduce using rule 8 (variable_declaration -> VAR declaration END .)
    NEWARRAY        reduce using rule 8 (variable_declaration -> VAR declaration END .)
    IF              reduce using rule 8 (variable_declaration -> VAR declaration END .)
    WHILE           reduce using rule 8 (variable_declaration -> VAR declaration END .)
    NEG             reduce using rule 8 (variable_declaration -> VAR declaration END .)
    STRINGV         reduce using rule 8 (variable_declaration -> VAR declaration END .)
    CHARV           reduce using rule 8 (variable_declaration -> VAR declaration END .)
    LPAREN          reduce using rule 8 (variable_declaration -> VAR declaration END .)
    ID              reduce using rule 8 (variable_declaration -> VAR declaration END .)
    MINUS           reduce using rule 8 (variable_declaration -> VAR declaration END .)
    NUMBER          reduce using rule 8 (variable_declaration -> VAR declaration END .)
    REAL            reduce using rule 8 (variable_declaration -> VAR declaration END .)
    BOOLV           reduce using rule 8 (variable_declaration -> VAR declaration END .)
    END             reduce using rule 8 (variable_declaration -> VAR declaration END .)
    RCBRAC          reduce using rule 8 (variable_declaration -> VAR declaration END .)


state 17

    (10) declaration -> ID DEF . type liquid_type
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOL
    (19) type -> . VOID
    (20) type -> . CHAR
    (21) type -> . LSQBRAC type RSQBRAC

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    STRING          shift and go to state 24
    BOOL            shift and go to state 25
    VOID            shift and go to state 26
    CHAR            shift and go to state 27
    LSQBRAC         shift and go to state 28

    type                           shift and go to state 21

state 18

    (9) variable_declaration -> VAL declaration END .

    VAR             reduce using rule 9 (variable_declaration -> VAL declaration END .)
    VAL             reduce using rule 9 (variable_declaration -> VAL declaration END .)
    FUNCTION        reduce using rule 9 (variable_declaration -> VAL declaration END .)
    $end            reduce using rule 9 (variable_declaration -> VAL declaration END .)
    NEWARRAY        reduce using rule 9 (variable_declaration -> VAL declaration END .)
    IF              reduce using rule 9 (variable_declaration -> VAL declaration END .)
    WHILE           reduce using rule 9 (variable_declaration -> VAL declaration END .)
    NEG             reduce using rule 9 (variable_declaration -> VAL declaration END .)
    STRINGV         reduce using rule 9 (variable_declaration -> VAL declaration END .)
    CHARV           reduce using rule 9 (variable_declaration -> VAL declaration END .)
    LPAREN          reduce using rule 9 (variable_declaration -> VAL declaration END .)
    ID              reduce using rule 9 (variable_declaration -> VAL declaration END .)
    MINUS           reduce using rule 9 (variable_declaration -> VAL declaration END .)
    NUMBER          reduce using rule 9 (variable_declaration -> VAL declaration END .)
    REAL            reduce using rule 9 (variable_declaration -> VAL declaration END .)
    BOOLV           reduce using rule 9 (variable_declaration -> VAL declaration END .)
    END             reduce using rule 9 (variable_declaration -> VAL declaration END .)
    RCBRAC          reduce using rule 9 (variable_declaration -> VAL declaration END .)


state 19

    (63) function_dec -> FUNCTION ID field_list . with_type_or_not with_body_or_not
    (64) with_type_or_not -> . DEF type
    (65) with_type_or_not -> .

    DEF             shift and go to state 30
    END             reduce using rule 65 (with_type_or_not -> .)
    LCBRAC          reduce using rule 65 (with_type_or_not -> .)

    with_type_or_not               shift and go to state 29

state 20

    (70) field_list -> LPAREN . empty_or_field RPAREN
    (71) empty_or_field -> . empty_list
    (72) empty_or_field -> . ne_field_list
    (105) empty_list -> . empty
    (73) ne_field_list -> . ne_field_list_end
    (74) ne_field_list -> . ne_field_list_iter
    (104) empty -> .
    (76) ne_field_list_end -> . field
    (75) ne_field_list_iter -> . ne_field_list COMMA field
    (77) field -> . VAL ID DEF type
    (78) field -> . VAR ID DEF type

    RPAREN          reduce using rule 104 (empty -> .)
    VAL             shift and go to state 38
    VAR             shift and go to state 39

    empty_or_field                 shift and go to state 31
    empty_list                     shift and go to state 32
    ne_field_list                  shift and go to state 33
    empty                          shift and go to state 34
    ne_field_list_end              shift and go to state 35
    ne_field_list_iter             shift and go to state 36
    field                          shift and go to state 37

state 21

    (10) declaration -> ID DEF type . liquid_type
    (11) liquid_type -> . LPAREN expression RPAREN give_value
    (12) liquid_type -> . give_value
    (13) give_value -> . ASSIGN value
    (14) give_value -> .

    LPAREN          shift and go to state 41
    ASSIGN          shift and go to state 43
    END             reduce using rule 14 (give_value -> .)

    liquid_type                    shift and go to state 40
    give_value                     shift and go to state 42

state 22

    (15) type -> INT .

    LPAREN          reduce using rule 15 (type -> INT .)
    ASSIGN          reduce using rule 15 (type -> INT .)
    END             reduce using rule 15 (type -> INT .)
    RSQBRAC         reduce using rule 15 (type -> INT .)
    LCBRAC          reduce using rule 15 (type -> INT .)
    COMMA           reduce using rule 15 (type -> INT .)
    RPAREN          reduce using rule 15 (type -> INT .)


state 23

    (16) type -> FLOAT .

    LPAREN          reduce using rule 16 (type -> FLOAT .)
    ASSIGN          reduce using rule 16 (type -> FLOAT .)
    END             reduce using rule 16 (type -> FLOAT .)
    RSQBRAC         reduce using rule 16 (type -> FLOAT .)
    LCBRAC          reduce using rule 16 (type -> FLOAT .)
    COMMA           reduce using rule 16 (type -> FLOAT .)
    RPAREN          reduce using rule 16 (type -> FLOAT .)


state 24

    (17) type -> STRING .

    LPAREN          reduce using rule 17 (type -> STRING .)
    ASSIGN          reduce using rule 17 (type -> STRING .)
    END             reduce using rule 17 (type -> STRING .)
    RSQBRAC         reduce using rule 17 (type -> STRING .)
    LCBRAC          reduce using rule 17 (type -> STRING .)
    COMMA           reduce using rule 17 (type -> STRING .)
    RPAREN          reduce using rule 17 (type -> STRING .)


state 25

    (18) type -> BOOL .

    LPAREN          reduce using rule 18 (type -> BOOL .)
    ASSIGN          reduce using rule 18 (type -> BOOL .)
    END             reduce using rule 18 (type -> BOOL .)
    RSQBRAC         reduce using rule 18 (type -> BOOL .)
    LCBRAC          reduce using rule 18 (type -> BOOL .)
    COMMA           reduce using rule 18 (type -> BOOL .)
    RPAREN          reduce using rule 18 (type -> BOOL .)


state 26

    (19) type -> VOID .

    LPAREN          reduce using rule 19 (type -> VOID .)
    ASSIGN          reduce using rule 19 (type -> VOID .)
    END             reduce using rule 19 (type -> VOID .)
    RSQBRAC         reduce using rule 19 (type -> VOID .)
    LCBRAC          reduce using rule 19 (type -> VOID .)
    COMMA           reduce using rule 19 (type -> VOID .)
    RPAREN          reduce using rule 19 (type -> VOID .)


state 27

    (20) type -> CHAR .

    LPAREN          reduce using rule 20 (type -> CHAR .)
    ASSIGN          reduce using rule 20 (type -> CHAR .)
    END             reduce using rule 20 (type -> CHAR .)
    RSQBRAC         reduce using rule 20 (type -> CHAR .)
    LCBRAC          reduce using rule 20 (type -> CHAR .)
    COMMA           reduce using rule 20 (type -> CHAR .)
    RPAREN          reduce using rule 20 (type -> CHAR .)


state 28

    (21) type -> LSQBRAC . type RSQBRAC
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOL
    (19) type -> . VOID
    (20) type -> . CHAR
    (21) type -> . LSQBRAC type RSQBRAC

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    STRING          shift and go to state 24
    BOOL            shift and go to state 25
    VOID            shift and go to state 26
    CHAR            shift and go to state 27
    LSQBRAC         shift and go to state 28

    type                           shift and go to state 44

state 29

    (63) function_dec -> FUNCTION ID field_list with_type_or_not . with_body_or_not
    (66) with_body_or_not -> . function_dec_no_body
    (67) with_body_or_not -> . function_dec_with_body
    (69) function_dec_no_body -> . END
    (68) function_dec_with_body -> . LCBRAC body RCBRAC

    END             shift and go to state 48
    LCBRAC          shift and go to state 49

    with_body_or_not               shift and go to state 45
    function_dec_no_body           shift and go to state 46
    function_dec_with_body         shift and go to state 47

state 30

    (64) with_type_or_not -> DEF . type
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOL
    (19) type -> . VOID
    (20) type -> . CHAR
    (21) type -> . LSQBRAC type RSQBRAC

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    STRING          shift and go to state 24
    BOOL            shift and go to state 25
    VOID            shift and go to state 26
    CHAR            shift and go to state 27
    LSQBRAC         shift and go to state 28

    type                           shift and go to state 50

state 31

    (70) field_list -> LPAREN empty_or_field . RPAREN

    RPAREN          shift and go to state 51


state 32

    (71) empty_or_field -> empty_list .

    RPAREN          reduce using rule 71 (empty_or_field -> empty_list .)


state 33

    (72) empty_or_field -> ne_field_list .
    (75) ne_field_list_iter -> ne_field_list . COMMA field

    RPAREN          reduce using rule 72 (empty_or_field -> ne_field_list .)
    COMMA           shift and go to state 52


state 34

    (105) empty_list -> empty .

    RPAREN          reduce using rule 105 (empty_list -> empty .)


state 35

    (73) ne_field_list -> ne_field_list_end .

    COMMA           reduce using rule 73 (ne_field_list -> ne_field_list_end .)
    RPAREN          reduce using rule 73 (ne_field_list -> ne_field_list_end .)


state 36

    (74) ne_field_list -> ne_field_list_iter .

    COMMA           reduce using rule 74 (ne_field_list -> ne_field_list_iter .)
    RPAREN          reduce using rule 74 (ne_field_list -> ne_field_list_iter .)


state 37

    (76) ne_field_list_end -> field .

    COMMA           reduce using rule 76 (ne_field_list_end -> field .)
    RPAREN          reduce using rule 76 (ne_field_list_end -> field .)


state 38

    (77) field -> VAL . ID DEF type

    ID              shift and go to state 53


state 39

    (78) field -> VAR . ID DEF type

    ID              shift and go to state 54


state 40

    (10) declaration -> ID DEF type liquid_type .

    END             reduce using rule 10 (declaration -> ID DEF type liquid_type .)


state 41

    (11) liquid_type -> LPAREN . expression RPAREN give_value
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 56
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 42

    (12) liquid_type -> give_value .

    END             reduce using rule 12 (liquid_type -> give_value .)


state 43

    (13) give_value -> ASSIGN . value
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

  ! shift/reduce conflict for MINUS resolved as shift
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    PLUS            reduce using rule 26 (value -> .)
    TIMES           reduce using rule 26 (value -> .)
    DIVIDE          reduce using rule 26 (value -> .)
    MOD             reduce using rule 26 (value -> .)
    MUL             reduce using rule 26 (value -> .)
    RPAREN          reduce using rule 26 (value -> .)
    OR              reduce using rule 26 (value -> .)
    AND             reduce using rule 26 (value -> .)
    GT              reduce using rule 26 (value -> .)
    GTEQ            reduce using rule 26 (value -> .)
    LT              reduce using rule 26 (value -> .)
    LTEQ            reduce using rule 26 (value -> .)
    EQ              reduce using rule 26 (value -> .)
    NEQ             reduce using rule 26 (value -> .)
    LCBRAC          reduce using rule 26 (value -> .)
    RSQBRAC         reduce using rule 26 (value -> .)
    COMMA           reduce using rule 26 (value -> .)
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

  ! MINUS           [ reduce using rule 26 (value -> .) ]

    value                          shift and go to state 68
    expression                     shift and go to state 69
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 44

    (21) type -> LSQBRAC type . RSQBRAC

    RSQBRAC         shift and go to state 75


state 45

    (63) function_dec -> FUNCTION ID field_list with_type_or_not with_body_or_not .

    VAR             reduce using rule 63 (function_dec -> FUNCTION ID field_list with_type_or_not with_body_or_not .)
    VAL             reduce using rule 63 (function_dec -> FUNCTION ID field_list with_type_or_not with_body_or_not .)
    FUNCTION        reduce using rule 63 (function_dec -> FUNCTION ID field_list with_type_or_not with_body_or_not .)
    $end            reduce using rule 63 (function_dec -> FUNCTION ID field_list with_type_or_not with_body_or_not .)


state 46

    (66) with_body_or_not -> function_dec_no_body .

    VAR             reduce using rule 66 (with_body_or_not -> function_dec_no_body .)
    VAL             reduce using rule 66 (with_body_or_not -> function_dec_no_body .)
    FUNCTION        reduce using rule 66 (with_body_or_not -> function_dec_no_body .)
    $end            reduce using rule 66 (with_body_or_not -> function_dec_no_body .)


state 47

    (67) with_body_or_not -> function_dec_with_body .

    VAR             reduce using rule 67 (with_body_or_not -> function_dec_with_body .)
    VAL             reduce using rule 67 (with_body_or_not -> function_dec_with_body .)
    FUNCTION        reduce using rule 67 (with_body_or_not -> function_dec_with_body .)
    $end            reduce using rule 67 (with_body_or_not -> function_dec_with_body .)


state 48

    (69) function_dec_no_body -> END .

    VAR             reduce using rule 69 (function_dec_no_body -> END .)
    VAL             reduce using rule 69 (function_dec_no_body -> END .)
    FUNCTION        reduce using rule 69 (function_dec_no_body -> END .)
    $end            reduce using rule 69 (function_dec_no_body -> END .)


state 49

    (68) function_dec_with_body -> LCBRAC . body RCBRAC
    (79) body -> . statement_list
    (80) statement_list -> . statement_list_end
    (81) statement_list -> . statement_list_iter
    (83) statement_list_end -> . statement
    (82) statement_list_iter -> . statement_list statement
    (84) statement -> . variable_declaration
    (85) statement -> . value END
    (86) statement -> . if_statement
    (87) statement -> . while_statement
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement
    (103) while_statement -> . WHILE expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    body                           shift and go to state 76
    statement_list                 shift and go to state 77
    statement_list_end             shift and go to state 78
    statement_list_iter            shift and go to state 79
    statement                      shift and go to state 80
    variable_declaration           shift and go to state 81
    value                          shift and go to state 82
    if_statement                   shift and go to state 83
    while_statement                shift and go to state 84
    expression                     shift and go to state 69
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 50

    (64) with_type_or_not -> DEF type .

    END             reduce using rule 64 (with_type_or_not -> DEF type .)
    LCBRAC          reduce using rule 64 (with_type_or_not -> DEF type .)


state 51

    (70) field_list -> LPAREN empty_or_field RPAREN .

    DEF             reduce using rule 70 (field_list -> LPAREN empty_or_field RPAREN .)
    END             reduce using rule 70 (field_list -> LPAREN empty_or_field RPAREN .)
    LCBRAC          reduce using rule 70 (field_list -> LPAREN empty_or_field RPAREN .)


state 52

    (75) ne_field_list_iter -> ne_field_list COMMA . field
    (77) field -> . VAL ID DEF type
    (78) field -> . VAR ID DEF type

    VAL             shift and go to state 38
    VAR             shift and go to state 39

    field                          shift and go to state 87

state 53

    (77) field -> VAL ID . DEF type

    DEF             shift and go to state 88


state 54

    (78) field -> VAR ID . DEF type

    DEF             shift and go to state 89


state 55

    (44) expression_v -> LPAREN . expression RPAREN
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 90
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 56

    (11) liquid_type -> LPAREN expression . RPAREN give_value
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          shift and go to state 91
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99


state 57

    (35) expression -> expression_v . PLUS expression
    (36) expression -> expression_v . MINUS expression
    (37) expression -> expression_v . TIMES expression
    (38) expression -> expression_v . DIVIDE expression
    (39) expression -> expression_v . MOD expression
    (40) expression -> expression_v . MUL expression
    (41) expression -> expression_v .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MUL resolved as shift
    PLUS            shift and go to state 100
    MINUS           shift and go to state 101
    TIMES           shift and go to state 102
    DIVIDE          shift and go to state 103
    MOD             shift and go to state 104
    MUL             shift and go to state 105
    RPAREN          reduce using rule 41 (expression -> expression_v .)
    OR              reduce using rule 41 (expression -> expression_v .)
    AND             reduce using rule 41 (expression -> expression_v .)
    GT              reduce using rule 41 (expression -> expression_v .)
    GTEQ            reduce using rule 41 (expression -> expression_v .)
    LT              reduce using rule 41 (expression -> expression_v .)
    LTEQ            reduce using rule 41 (expression -> expression_v .)
    EQ              reduce using rule 41 (expression -> expression_v .)
    NEQ             reduce using rule 41 (expression -> expression_v .)
    END             reduce using rule 41 (expression -> expression_v .)
    LCBRAC          reduce using rule 41 (expression -> expression_v .)
    RSQBRAC         reduce using rule 41 (expression -> expression_v .)
    COMMA           reduce using rule 41 (expression -> expression_v .)

  ! PLUS            [ reduce using rule 41 (expression -> expression_v .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression_v .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression_v .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression_v .) ]
  ! MOD             [ reduce using rule 41 (expression -> expression_v .) ]
  ! MUL             [ reduce using rule 41 (expression -> expression_v .) ]


state 58

    (43) unary_minus_exp -> MINUS . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 106
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 59

    (42) expression -> unary_minus_exp .

    RPAREN          reduce using rule 42 (expression -> unary_minus_exp .)
    OR              reduce using rule 42 (expression -> unary_minus_exp .)
    AND             reduce using rule 42 (expression -> unary_minus_exp .)
    GT              reduce using rule 42 (expression -> unary_minus_exp .)
    GTEQ            reduce using rule 42 (expression -> unary_minus_exp .)
    LT              reduce using rule 42 (expression -> unary_minus_exp .)
    LTEQ            reduce using rule 42 (expression -> unary_minus_exp .)
    EQ              reduce using rule 42 (expression -> unary_minus_exp .)
    NEQ             reduce using rule 42 (expression -> unary_minus_exp .)
    END             reduce using rule 42 (expression -> unary_minus_exp .)
    PLUS            reduce using rule 42 (expression -> unary_minus_exp .)
    MINUS           reduce using rule 42 (expression -> unary_minus_exp .)
    TIMES           reduce using rule 42 (expression -> unary_minus_exp .)
    DIVIDE          reduce using rule 42 (expression -> unary_minus_exp .)
    MOD             reduce using rule 42 (expression -> unary_minus_exp .)
    MUL             reduce using rule 42 (expression -> unary_minus_exp .)
    LCBRAC          reduce using rule 42 (expression -> unary_minus_exp .)
    RSQBRAC         reduce using rule 42 (expression -> unary_minus_exp .)
    COMMA           reduce using rule 42 (expression -> unary_minus_exp .)


state 60

    (56) expression -> NEG . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 107
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 61

    (45) expression_v -> number .

    PLUS            reduce using rule 45 (expression_v -> number .)
    MINUS           reduce using rule 45 (expression_v -> number .)
    TIMES           reduce using rule 45 (expression_v -> number .)
    DIVIDE          reduce using rule 45 (expression_v -> number .)
    MOD             reduce using rule 45 (expression_v -> number .)
    MUL             reduce using rule 45 (expression_v -> number .)
    RPAREN          reduce using rule 45 (expression_v -> number .)
    OR              reduce using rule 45 (expression_v -> number .)
    AND             reduce using rule 45 (expression_v -> number .)
    GT              reduce using rule 45 (expression_v -> number .)
    GTEQ            reduce using rule 45 (expression_v -> number .)
    LT              reduce using rule 45 (expression_v -> number .)
    LTEQ            reduce using rule 45 (expression_v -> number .)
    EQ              reduce using rule 45 (expression_v -> number .)
    NEQ             reduce using rule 45 (expression_v -> number .)
    END             reduce using rule 45 (expression_v -> number .)
    LCBRAC          reduce using rule 45 (expression_v -> number .)
    RSQBRAC         reduce using rule 45 (expression_v -> number .)
    COMMA           reduce using rule 45 (expression_v -> number .)


state 62

    (46) expression_v -> real .

    PLUS            reduce using rule 46 (expression_v -> real .)
    MINUS           reduce using rule 46 (expression_v -> real .)
    TIMES           reduce using rule 46 (expression_v -> real .)
    DIVIDE          reduce using rule 46 (expression_v -> real .)
    MOD             reduce using rule 46 (expression_v -> real .)
    MUL             reduce using rule 46 (expression_v -> real .)
    RPAREN          reduce using rule 46 (expression_v -> real .)
    OR              reduce using rule 46 (expression_v -> real .)
    AND             reduce using rule 46 (expression_v -> real .)
    GT              reduce using rule 46 (expression_v -> real .)
    GTEQ            reduce using rule 46 (expression_v -> real .)
    LT              reduce using rule 46 (expression_v -> real .)
    LTEQ            reduce using rule 46 (expression_v -> real .)
    EQ              reduce using rule 46 (expression_v -> real .)
    NEQ             reduce using rule 46 (expression_v -> real .)
    END             reduce using rule 46 (expression_v -> real .)
    LCBRAC          reduce using rule 46 (expression_v -> real .)
    RSQBRAC         reduce using rule 46 (expression_v -> real .)
    COMMA           reduce using rule 46 (expression_v -> real .)


state 63

    (47) expression_v -> boolv .

    PLUS            reduce using rule 47 (expression_v -> boolv .)
    MINUS           reduce using rule 47 (expression_v -> boolv .)
    TIMES           reduce using rule 47 (expression_v -> boolv .)
    DIVIDE          reduce using rule 47 (expression_v -> boolv .)
    MOD             reduce using rule 47 (expression_v -> boolv .)
    MUL             reduce using rule 47 (expression_v -> boolv .)
    RPAREN          reduce using rule 47 (expression_v -> boolv .)
    OR              reduce using rule 47 (expression_v -> boolv .)
    AND             reduce using rule 47 (expression_v -> boolv .)
    GT              reduce using rule 47 (expression_v -> boolv .)
    GTEQ            reduce using rule 47 (expression_v -> boolv .)
    LT              reduce using rule 47 (expression_v -> boolv .)
    LTEQ            reduce using rule 47 (expression_v -> boolv .)
    EQ              reduce using rule 47 (expression_v -> boolv .)
    NEQ             reduce using rule 47 (expression_v -> boolv .)
    END             reduce using rule 47 (expression_v -> boolv .)
    LCBRAC          reduce using rule 47 (expression_v -> boolv .)
    RSQBRAC         reduce using rule 47 (expression_v -> boolv .)
    COMMA           reduce using rule 47 (expression_v -> boolv .)


state 64

    (48) expression_v -> ID . array_or_func
    (29) array_or_func -> . LSQBRAC expression RSQBRAC assg_arr_value
    (30) array_or_func -> . assgn_statement_or_func_call
    (31) array_or_func -> .
    (88) assgn_statement_or_func_call -> . assignment_statement
    (89) assgn_statement_or_func_call -> . procedure_or_function_call
    (90) assignment_statement -> . give_value
    (91) procedure_or_function_call -> . param_list
    (13) give_value -> . ASSIGN value
    (14) give_value -> .
    (92) param_list -> . LPAREN empty_or_param RPAREN

  ! reduce/reduce conflict for END resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MOD resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MUL resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for OR resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for AND resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for GT resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for GTEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LT resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LTEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for EQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for NEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LCBRAC resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for RSQBRAC resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (give_value -> .)
    LSQBRAC         shift and go to state 109
    ASSIGN          shift and go to state 43
    END             reduce using rule 14 (give_value -> .)
    PLUS            reduce using rule 14 (give_value -> .)
    MINUS           reduce using rule 14 (give_value -> .)
    TIMES           reduce using rule 14 (give_value -> .)
    DIVIDE          reduce using rule 14 (give_value -> .)
    MOD             reduce using rule 14 (give_value -> .)
    MUL             reduce using rule 14 (give_value -> .)
    RPAREN          reduce using rule 14 (give_value -> .)
    OR              reduce using rule 14 (give_value -> .)
    AND             reduce using rule 14 (give_value -> .)
    GT              reduce using rule 14 (give_value -> .)
    GTEQ            reduce using rule 14 (give_value -> .)
    LT              reduce using rule 14 (give_value -> .)
    LTEQ            reduce using rule 14 (give_value -> .)
    EQ              reduce using rule 14 (give_value -> .)
    NEQ             reduce using rule 14 (give_value -> .)
    LCBRAC          reduce using rule 14 (give_value -> .)
    RSQBRAC         reduce using rule 14 (give_value -> .)
    COMMA           reduce using rule 14 (give_value -> .)
    LPAREN          shift and go to state 115

  ! END             [ reduce using rule 31 (array_or_func -> .) ]
  ! PLUS            [ reduce using rule 31 (array_or_func -> .) ]
  ! MINUS           [ reduce using rule 31 (array_or_func -> .) ]
  ! TIMES           [ reduce using rule 31 (array_or_func -> .) ]
  ! DIVIDE          [ reduce using rule 31 (array_or_func -> .) ]
  ! MOD             [ reduce using rule 31 (array_or_func -> .) ]
  ! MUL             [ reduce using rule 31 (array_or_func -> .) ]
  ! RPAREN          [ reduce using rule 31 (array_or_func -> .) ]
  ! OR              [ reduce using rule 31 (array_or_func -> .) ]
  ! AND             [ reduce using rule 31 (array_or_func -> .) ]
  ! GT              [ reduce using rule 31 (array_or_func -> .) ]
  ! GTEQ            [ reduce using rule 31 (array_or_func -> .) ]
  ! LT              [ reduce using rule 31 (array_or_func -> .) ]
  ! LTEQ            [ reduce using rule 31 (array_or_func -> .) ]
  ! EQ              [ reduce using rule 31 (array_or_func -> .) ]
  ! NEQ             [ reduce using rule 31 (array_or_func -> .) ]
  ! LCBRAC          [ reduce using rule 31 (array_or_func -> .) ]
  ! RSQBRAC         [ reduce using rule 31 (array_or_func -> .) ]
  ! COMMA           [ reduce using rule 31 (array_or_func -> .) ]

    array_or_func                  shift and go to state 108
    assgn_statement_or_func_call   shift and go to state 110
    assignment_statement           shift and go to state 111
    procedure_or_function_call     shift and go to state 112
    give_value                     shift and go to state 113
    param_list                     shift and go to state 114

state 65

    (51) number -> NUMBER .

    PLUS            reduce using rule 51 (number -> NUMBER .)
    MINUS           reduce using rule 51 (number -> NUMBER .)
    TIMES           reduce using rule 51 (number -> NUMBER .)
    DIVIDE          reduce using rule 51 (number -> NUMBER .)
    MOD             reduce using rule 51 (number -> NUMBER .)
    MUL             reduce using rule 51 (number -> NUMBER .)
    RPAREN          reduce using rule 51 (number -> NUMBER .)
    OR              reduce using rule 51 (number -> NUMBER .)
    AND             reduce using rule 51 (number -> NUMBER .)
    GT              reduce using rule 51 (number -> NUMBER .)
    GTEQ            reduce using rule 51 (number -> NUMBER .)
    LT              reduce using rule 51 (number -> NUMBER .)
    LTEQ            reduce using rule 51 (number -> NUMBER .)
    EQ              reduce using rule 51 (number -> NUMBER .)
    NEQ             reduce using rule 51 (number -> NUMBER .)
    END             reduce using rule 51 (number -> NUMBER .)
    LCBRAC          reduce using rule 51 (number -> NUMBER .)
    RSQBRAC         reduce using rule 51 (number -> NUMBER .)
    COMMA           reduce using rule 51 (number -> NUMBER .)


state 66

    (52) real -> REAL .

    PLUS            reduce using rule 52 (real -> REAL .)
    MINUS           reduce using rule 52 (real -> REAL .)
    TIMES           reduce using rule 52 (real -> REAL .)
    DIVIDE          reduce using rule 52 (real -> REAL .)
    MOD             reduce using rule 52 (real -> REAL .)
    MUL             reduce using rule 52 (real -> REAL .)
    RPAREN          reduce using rule 52 (real -> REAL .)
    OR              reduce using rule 52 (real -> REAL .)
    AND             reduce using rule 52 (real -> REAL .)
    GT              reduce using rule 52 (real -> REAL .)
    GTEQ            reduce using rule 52 (real -> REAL .)
    LT              reduce using rule 52 (real -> REAL .)
    LTEQ            reduce using rule 52 (real -> REAL .)
    EQ              reduce using rule 52 (real -> REAL .)
    NEQ             reduce using rule 52 (real -> REAL .)
    END             reduce using rule 52 (real -> REAL .)
    LCBRAC          reduce using rule 52 (real -> REAL .)
    RSQBRAC         reduce using rule 52 (real -> REAL .)
    COMMA           reduce using rule 52 (real -> REAL .)


state 67

    (53) boolv -> BOOLV .

    PLUS            reduce using rule 53 (boolv -> BOOLV .)
    MINUS           reduce using rule 53 (boolv -> BOOLV .)
    TIMES           reduce using rule 53 (boolv -> BOOLV .)
    DIVIDE          reduce using rule 53 (boolv -> BOOLV .)
    MOD             reduce using rule 53 (boolv -> BOOLV .)
    MUL             reduce using rule 53 (boolv -> BOOLV .)
    RPAREN          reduce using rule 53 (boolv -> BOOLV .)
    OR              reduce using rule 53 (boolv -> BOOLV .)
    AND             reduce using rule 53 (boolv -> BOOLV .)
    GT              reduce using rule 53 (boolv -> BOOLV .)
    GTEQ            reduce using rule 53 (boolv -> BOOLV .)
    LT              reduce using rule 53 (boolv -> BOOLV .)
    LTEQ            reduce using rule 53 (boolv -> BOOLV .)
    EQ              reduce using rule 53 (boolv -> BOOLV .)
    NEQ             reduce using rule 53 (boolv -> BOOLV .)
    END             reduce using rule 53 (boolv -> BOOLV .)
    LCBRAC          reduce using rule 53 (boolv -> BOOLV .)
    RSQBRAC         reduce using rule 53 (boolv -> BOOLV .)
    COMMA           reduce using rule 53 (boolv -> BOOLV .)


state 68

    (13) give_value -> ASSIGN value .

    END             reduce using rule 13 (give_value -> ASSIGN value .)
    PLUS            reduce using rule 13 (give_value -> ASSIGN value .)
    MINUS           reduce using rule 13 (give_value -> ASSIGN value .)
    TIMES           reduce using rule 13 (give_value -> ASSIGN value .)
    DIVIDE          reduce using rule 13 (give_value -> ASSIGN value .)
    MOD             reduce using rule 13 (give_value -> ASSIGN value .)
    MUL             reduce using rule 13 (give_value -> ASSIGN value .)
    RPAREN          reduce using rule 13 (give_value -> ASSIGN value .)
    OR              reduce using rule 13 (give_value -> ASSIGN value .)
    AND             reduce using rule 13 (give_value -> ASSIGN value .)
    GT              reduce using rule 13 (give_value -> ASSIGN value .)
    GTEQ            reduce using rule 13 (give_value -> ASSIGN value .)
    LT              reduce using rule 13 (give_value -> ASSIGN value .)
    LTEQ            reduce using rule 13 (give_value -> ASSIGN value .)
    EQ              reduce using rule 13 (give_value -> ASSIGN value .)
    NEQ             reduce using rule 13 (give_value -> ASSIGN value .)
    LCBRAC          reduce using rule 13 (give_value -> ASSIGN value .)
    RSQBRAC         reduce using rule 13 (give_value -> ASSIGN value .)
    COMMA           reduce using rule 13 (give_value -> ASSIGN value .)


state 69

    (22) value -> expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    END             reduce using rule 22 (value -> expression .)
    PLUS            reduce using rule 22 (value -> expression .)
    MINUS           reduce using rule 22 (value -> expression .)
    TIMES           reduce using rule 22 (value -> expression .)
    DIVIDE          reduce using rule 22 (value -> expression .)
    MOD             reduce using rule 22 (value -> expression .)
    MUL             reduce using rule 22 (value -> expression .)
    RPAREN          reduce using rule 22 (value -> expression .)
    LCBRAC          reduce using rule 22 (value -> expression .)
    RSQBRAC         reduce using rule 22 (value -> expression .)
    COMMA           reduce using rule 22 (value -> expression .)
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99

  ! OR              [ reduce using rule 22 (value -> expression .) ]
  ! AND             [ reduce using rule 22 (value -> expression .) ]
  ! GT              [ reduce using rule 22 (value -> expression .) ]
  ! GTEQ            [ reduce using rule 22 (value -> expression .) ]
  ! LT              [ reduce using rule 22 (value -> expression .) ]
  ! LTEQ            [ reduce using rule 22 (value -> expression .) ]
  ! EQ              [ reduce using rule 22 (value -> expression .) ]
  ! NEQ             [ reduce using rule 22 (value -> expression .) ]


state 70

    (23) value -> stringv .

    END             reduce using rule 23 (value -> stringv .)
    PLUS            reduce using rule 23 (value -> stringv .)
    MINUS           reduce using rule 23 (value -> stringv .)
    TIMES           reduce using rule 23 (value -> stringv .)
    DIVIDE          reduce using rule 23 (value -> stringv .)
    MOD             reduce using rule 23 (value -> stringv .)
    MUL             reduce using rule 23 (value -> stringv .)
    RPAREN          reduce using rule 23 (value -> stringv .)
    OR              reduce using rule 23 (value -> stringv .)
    AND             reduce using rule 23 (value -> stringv .)
    GT              reduce using rule 23 (value -> stringv .)
    GTEQ            reduce using rule 23 (value -> stringv .)
    LT              reduce using rule 23 (value -> stringv .)
    LTEQ            reduce using rule 23 (value -> stringv .)
    EQ              reduce using rule 23 (value -> stringv .)
    NEQ             reduce using rule 23 (value -> stringv .)
    LCBRAC          reduce using rule 23 (value -> stringv .)
    RSQBRAC         reduce using rule 23 (value -> stringv .)
    COMMA           reduce using rule 23 (value -> stringv .)


state 71

    (24) value -> charv .

    END             reduce using rule 24 (value -> charv .)
    PLUS            reduce using rule 24 (value -> charv .)
    MINUS           reduce using rule 24 (value -> charv .)
    TIMES           reduce using rule 24 (value -> charv .)
    DIVIDE          reduce using rule 24 (value -> charv .)
    MOD             reduce using rule 24 (value -> charv .)
    MUL             reduce using rule 24 (value -> charv .)
    RPAREN          reduce using rule 24 (value -> charv .)
    OR              reduce using rule 24 (value -> charv .)
    AND             reduce using rule 24 (value -> charv .)
    GT              reduce using rule 24 (value -> charv .)
    GTEQ            reduce using rule 24 (value -> charv .)
    LT              reduce using rule 24 (value -> charv .)
    LTEQ            reduce using rule 24 (value -> charv .)
    EQ              reduce using rule 24 (value -> charv .)
    NEQ             reduce using rule 24 (value -> charv .)
    LCBRAC          reduce using rule 24 (value -> charv .)
    RSQBRAC         reduce using rule 24 (value -> charv .)
    COMMA           reduce using rule 24 (value -> charv .)


state 72

    (25) value -> NEWARRAY . LSQBRAC expression RSQBRAC ps

    LSQBRAC         shift and go to state 116


state 73

    (49) stringv -> STRINGV .

    END             reduce using rule 49 (stringv -> STRINGV .)
    PLUS            reduce using rule 49 (stringv -> STRINGV .)
    MINUS           reduce using rule 49 (stringv -> STRINGV .)
    TIMES           reduce using rule 49 (stringv -> STRINGV .)
    DIVIDE          reduce using rule 49 (stringv -> STRINGV .)
    MOD             reduce using rule 49 (stringv -> STRINGV .)
    MUL             reduce using rule 49 (stringv -> STRINGV .)
    RPAREN          reduce using rule 49 (stringv -> STRINGV .)
    OR              reduce using rule 49 (stringv -> STRINGV .)
    AND             reduce using rule 49 (stringv -> STRINGV .)
    GT              reduce using rule 49 (stringv -> STRINGV .)
    GTEQ            reduce using rule 49 (stringv -> STRINGV .)
    LT              reduce using rule 49 (stringv -> STRINGV .)
    LTEQ            reduce using rule 49 (stringv -> STRINGV .)
    EQ              reduce using rule 49 (stringv -> STRINGV .)
    NEQ             reduce using rule 49 (stringv -> STRINGV .)
    LCBRAC          reduce using rule 49 (stringv -> STRINGV .)
    RSQBRAC         reduce using rule 49 (stringv -> STRINGV .)
    COMMA           reduce using rule 49 (stringv -> STRINGV .)


state 74

    (50) charv -> CHARV .

    END             reduce using rule 50 (charv -> CHARV .)
    PLUS            reduce using rule 50 (charv -> CHARV .)
    MINUS           reduce using rule 50 (charv -> CHARV .)
    TIMES           reduce using rule 50 (charv -> CHARV .)
    DIVIDE          reduce using rule 50 (charv -> CHARV .)
    MOD             reduce using rule 50 (charv -> CHARV .)
    MUL             reduce using rule 50 (charv -> CHARV .)
    RPAREN          reduce using rule 50 (charv -> CHARV .)
    OR              reduce using rule 50 (charv -> CHARV .)
    AND             reduce using rule 50 (charv -> CHARV .)
    GT              reduce using rule 50 (charv -> CHARV .)
    GTEQ            reduce using rule 50 (charv -> CHARV .)
    LT              reduce using rule 50 (charv -> CHARV .)
    LTEQ            reduce using rule 50 (charv -> CHARV .)
    EQ              reduce using rule 50 (charv -> CHARV .)
    NEQ             reduce using rule 50 (charv -> CHARV .)
    LCBRAC          reduce using rule 50 (charv -> CHARV .)
    RSQBRAC         reduce using rule 50 (charv -> CHARV .)
    COMMA           reduce using rule 50 (charv -> CHARV .)


state 75

    (21) type -> LSQBRAC type RSQBRAC .

    LPAREN          reduce using rule 21 (type -> LSQBRAC type RSQBRAC .)
    ASSIGN          reduce using rule 21 (type -> LSQBRAC type RSQBRAC .)
    END             reduce using rule 21 (type -> LSQBRAC type RSQBRAC .)
    RSQBRAC         reduce using rule 21 (type -> LSQBRAC type RSQBRAC .)
    LCBRAC          reduce using rule 21 (type -> LSQBRAC type RSQBRAC .)
    COMMA           reduce using rule 21 (type -> LSQBRAC type RSQBRAC .)
    RPAREN          reduce using rule 21 (type -> LSQBRAC type RSQBRAC .)


state 76

    (68) function_dec_with_body -> LCBRAC body . RCBRAC

    RCBRAC          shift and go to state 117


state 77

    (79) body -> statement_list .
    (82) statement_list_iter -> statement_list . statement
    (84) statement -> . variable_declaration
    (85) statement -> . value END
    (86) statement -> . if_statement
    (87) statement -> . while_statement
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement
    (103) while_statement -> . WHILE expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    RCBRAC          reduce using rule 79 (body -> statement_list .)
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    statement                      shift and go to state 118
    variable_declaration           shift and go to state 81
    value                          shift and go to state 82
    if_statement                   shift and go to state 83
    while_statement                shift and go to state 84
    expression                     shift and go to state 69
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 78

    (80) statement_list -> statement_list_end .

    VAR             reduce using rule 80 (statement_list -> statement_list_end .)
    VAL             reduce using rule 80 (statement_list -> statement_list_end .)
    NEWARRAY        reduce using rule 80 (statement_list -> statement_list_end .)
    IF              reduce using rule 80 (statement_list -> statement_list_end .)
    WHILE           reduce using rule 80 (statement_list -> statement_list_end .)
    NEG             reduce using rule 80 (statement_list -> statement_list_end .)
    STRINGV         reduce using rule 80 (statement_list -> statement_list_end .)
    CHARV           reduce using rule 80 (statement_list -> statement_list_end .)
    LPAREN          reduce using rule 80 (statement_list -> statement_list_end .)
    ID              reduce using rule 80 (statement_list -> statement_list_end .)
    MINUS           reduce using rule 80 (statement_list -> statement_list_end .)
    NUMBER          reduce using rule 80 (statement_list -> statement_list_end .)
    REAL            reduce using rule 80 (statement_list -> statement_list_end .)
    BOOLV           reduce using rule 80 (statement_list -> statement_list_end .)
    END             reduce using rule 80 (statement_list -> statement_list_end .)
    RCBRAC          reduce using rule 80 (statement_list -> statement_list_end .)


state 79

    (81) statement_list -> statement_list_iter .

    VAR             reduce using rule 81 (statement_list -> statement_list_iter .)
    VAL             reduce using rule 81 (statement_list -> statement_list_iter .)
    NEWARRAY        reduce using rule 81 (statement_list -> statement_list_iter .)
    IF              reduce using rule 81 (statement_list -> statement_list_iter .)
    WHILE           reduce using rule 81 (statement_list -> statement_list_iter .)
    NEG             reduce using rule 81 (statement_list -> statement_list_iter .)
    STRINGV         reduce using rule 81 (statement_list -> statement_list_iter .)
    CHARV           reduce using rule 81 (statement_list -> statement_list_iter .)
    LPAREN          reduce using rule 81 (statement_list -> statement_list_iter .)
    ID              reduce using rule 81 (statement_list -> statement_list_iter .)
    MINUS           reduce using rule 81 (statement_list -> statement_list_iter .)
    NUMBER          reduce using rule 81 (statement_list -> statement_list_iter .)
    REAL            reduce using rule 81 (statement_list -> statement_list_iter .)
    BOOLV           reduce using rule 81 (statement_list -> statement_list_iter .)
    END             reduce using rule 81 (statement_list -> statement_list_iter .)
    RCBRAC          reduce using rule 81 (statement_list -> statement_list_iter .)


state 80

    (83) statement_list_end -> statement .

    VAR             reduce using rule 83 (statement_list_end -> statement .)
    VAL             reduce using rule 83 (statement_list_end -> statement .)
    NEWARRAY        reduce using rule 83 (statement_list_end -> statement .)
    IF              reduce using rule 83 (statement_list_end -> statement .)
    WHILE           reduce using rule 83 (statement_list_end -> statement .)
    NEG             reduce using rule 83 (statement_list_end -> statement .)
    STRINGV         reduce using rule 83 (statement_list_end -> statement .)
    CHARV           reduce using rule 83 (statement_list_end -> statement .)
    LPAREN          reduce using rule 83 (statement_list_end -> statement .)
    ID              reduce using rule 83 (statement_list_end -> statement .)
    MINUS           reduce using rule 83 (statement_list_end -> statement .)
    NUMBER          reduce using rule 83 (statement_list_end -> statement .)
    REAL            reduce using rule 83 (statement_list_end -> statement .)
    BOOLV           reduce using rule 83 (statement_list_end -> statement .)
    END             reduce using rule 83 (statement_list_end -> statement .)
    RCBRAC          reduce using rule 83 (statement_list_end -> statement .)


state 81

    (84) statement -> variable_declaration .

    VAR             reduce using rule 84 (statement -> variable_declaration .)
    VAL             reduce using rule 84 (statement -> variable_declaration .)
    NEWARRAY        reduce using rule 84 (statement -> variable_declaration .)
    IF              reduce using rule 84 (statement -> variable_declaration .)
    WHILE           reduce using rule 84 (statement -> variable_declaration .)
    NEG             reduce using rule 84 (statement -> variable_declaration .)
    STRINGV         reduce using rule 84 (statement -> variable_declaration .)
    CHARV           reduce using rule 84 (statement -> variable_declaration .)
    LPAREN          reduce using rule 84 (statement -> variable_declaration .)
    ID              reduce using rule 84 (statement -> variable_declaration .)
    MINUS           reduce using rule 84 (statement -> variable_declaration .)
    NUMBER          reduce using rule 84 (statement -> variable_declaration .)
    REAL            reduce using rule 84 (statement -> variable_declaration .)
    BOOLV           reduce using rule 84 (statement -> variable_declaration .)
    END             reduce using rule 84 (statement -> variable_declaration .)
    RCBRAC          reduce using rule 84 (statement -> variable_declaration .)


state 82

    (85) statement -> value . END

    END             shift and go to state 119


state 83

    (86) statement -> if_statement .

    VAR             reduce using rule 86 (statement -> if_statement .)
    VAL             reduce using rule 86 (statement -> if_statement .)
    NEWARRAY        reduce using rule 86 (statement -> if_statement .)
    IF              reduce using rule 86 (statement -> if_statement .)
    WHILE           reduce using rule 86 (statement -> if_statement .)
    NEG             reduce using rule 86 (statement -> if_statement .)
    STRINGV         reduce using rule 86 (statement -> if_statement .)
    CHARV           reduce using rule 86 (statement -> if_statement .)
    LPAREN          reduce using rule 86 (statement -> if_statement .)
    ID              reduce using rule 86 (statement -> if_statement .)
    MINUS           reduce using rule 86 (statement -> if_statement .)
    NUMBER          reduce using rule 86 (statement -> if_statement .)
    REAL            reduce using rule 86 (statement -> if_statement .)
    BOOLV           reduce using rule 86 (statement -> if_statement .)
    END             reduce using rule 86 (statement -> if_statement .)
    RCBRAC          reduce using rule 86 (statement -> if_statement .)


state 84

    (87) statement -> while_statement .

    VAR             reduce using rule 87 (statement -> while_statement .)
    VAL             reduce using rule 87 (statement -> while_statement .)
    NEWARRAY        reduce using rule 87 (statement -> while_statement .)
    IF              reduce using rule 87 (statement -> while_statement .)
    WHILE           reduce using rule 87 (statement -> while_statement .)
    NEG             reduce using rule 87 (statement -> while_statement .)
    STRINGV         reduce using rule 87 (statement -> while_statement .)
    CHARV           reduce using rule 87 (statement -> while_statement .)
    LPAREN          reduce using rule 87 (statement -> while_statement .)
    ID              reduce using rule 87 (statement -> while_statement .)
    MINUS           reduce using rule 87 (statement -> while_statement .)
    NUMBER          reduce using rule 87 (statement -> while_statement .)
    REAL            reduce using rule 87 (statement -> while_statement .)
    BOOLV           reduce using rule 87 (statement -> while_statement .)
    END             reduce using rule 87 (statement -> while_statement .)
    RCBRAC          reduce using rule 87 (statement -> while_statement .)


state 85

    (98) if_statement -> IF . expression LCBRAC statement_list RCBRAC else_statement
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 120
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 86

    (103) while_statement -> WHILE . expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 121
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 87

    (75) ne_field_list_iter -> ne_field_list COMMA field .

    COMMA           reduce using rule 75 (ne_field_list_iter -> ne_field_list COMMA field .)
    RPAREN          reduce using rule 75 (ne_field_list_iter -> ne_field_list COMMA field .)


state 88

    (77) field -> VAL ID DEF . type
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOL
    (19) type -> . VOID
    (20) type -> . CHAR
    (21) type -> . LSQBRAC type RSQBRAC

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    STRING          shift and go to state 24
    BOOL            shift and go to state 25
    VOID            shift and go to state 26
    CHAR            shift and go to state 27
    LSQBRAC         shift and go to state 28

    type                           shift and go to state 122

state 89

    (78) field -> VAR ID DEF . type
    (15) type -> . INT
    (16) type -> . FLOAT
    (17) type -> . STRING
    (18) type -> . BOOL
    (19) type -> . VOID
    (20) type -> . CHAR
    (21) type -> . LSQBRAC type RSQBRAC

    INT             shift and go to state 22
    FLOAT           shift and go to state 23
    STRING          shift and go to state 24
    BOOL            shift and go to state 25
    VOID            shift and go to state 26
    CHAR            shift and go to state 27
    LSQBRAC         shift and go to state 28

    type                           shift and go to state 123

state 90

    (44) expression_v -> LPAREN expression . RPAREN
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          shift and go to state 124
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99


state 91

    (11) liquid_type -> LPAREN expression RPAREN . give_value
    (13) give_value -> . ASSIGN value
    (14) give_value -> .

    ASSIGN          shift and go to state 43
    END             reduce using rule 14 (give_value -> .)

    give_value                     shift and go to state 125

state 92

    (54) expression -> expression OR . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 126
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 93

    (55) expression -> expression AND . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 127
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 94

    (57) expression -> expression GT . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 128
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 95

    (58) expression -> expression GTEQ . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 129
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 96

    (59) expression -> expression LT . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 130
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 97

    (60) expression -> expression LTEQ . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 131
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 98

    (61) expression -> expression EQ . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 132
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 99

    (62) expression -> expression NEQ . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 133
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 100

    (35) expression -> expression_v PLUS . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression_v                   shift and go to state 57
    expression                     shift and go to state 134
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 101

    (36) expression -> expression_v MINUS . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression_v                   shift and go to state 57
    expression                     shift and go to state 135
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 102

    (37) expression -> expression_v TIMES . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression_v                   shift and go to state 57
    expression                     shift and go to state 136
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 103

    (38) expression -> expression_v DIVIDE . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression_v                   shift and go to state 57
    expression                     shift and go to state 137
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 104

    (39) expression -> expression_v MOD . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression_v                   shift and go to state 57
    expression                     shift and go to state 138
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 105

    (40) expression -> expression_v MUL . expression
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression_v                   shift and go to state 57
    expression                     shift and go to state 139
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 106

    (43) unary_minus_exp -> MINUS expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    OR              reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    AND             reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    GT              reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    GTEQ            reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    LT              reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    LTEQ            reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    EQ              reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    NEQ             reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    END             reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    PLUS            reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    MINUS           reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    TIMES           reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    DIVIDE          reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    MOD             reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    MUL             reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    LCBRAC          reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    RSQBRAC         reduce using rule 43 (unary_minus_exp -> MINUS expression .)
    COMMA           reduce using rule 43 (unary_minus_exp -> MINUS expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 107

    (56) expression -> NEG expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
    RPAREN          reduce using rule 56 (expression -> NEG expression .)
    END             reduce using rule 56 (expression -> NEG expression .)
    PLUS            reduce using rule 56 (expression -> NEG expression .)
    MINUS           reduce using rule 56 (expression -> NEG expression .)
    TIMES           reduce using rule 56 (expression -> NEG expression .)
    DIVIDE          reduce using rule 56 (expression -> NEG expression .)
    MOD             reduce using rule 56 (expression -> NEG expression .)
    MUL             reduce using rule 56 (expression -> NEG expression .)
    LCBRAC          reduce using rule 56 (expression -> NEG expression .)
    RSQBRAC         reduce using rule 56 (expression -> NEG expression .)
    COMMA           reduce using rule 56 (expression -> NEG expression .)
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99

  ! OR              [ reduce using rule 56 (expression -> NEG expression .) ]
  ! AND             [ reduce using rule 56 (expression -> NEG expression .) ]
  ! GT              [ reduce using rule 56 (expression -> NEG expression .) ]
  ! GTEQ            [ reduce using rule 56 (expression -> NEG expression .) ]
  ! LT              [ reduce using rule 56 (expression -> NEG expression .) ]
  ! LTEQ            [ reduce using rule 56 (expression -> NEG expression .) ]
  ! EQ              [ reduce using rule 56 (expression -> NEG expression .) ]
  ! NEQ             [ reduce using rule 56 (expression -> NEG expression .) ]


state 108

    (48) expression_v -> ID array_or_func .

    PLUS            reduce using rule 48 (expression_v -> ID array_or_func .)
    MINUS           reduce using rule 48 (expression_v -> ID array_or_func .)
    TIMES           reduce using rule 48 (expression_v -> ID array_or_func .)
    DIVIDE          reduce using rule 48 (expression_v -> ID array_or_func .)
    MOD             reduce using rule 48 (expression_v -> ID array_or_func .)
    MUL             reduce using rule 48 (expression_v -> ID array_or_func .)
    RPAREN          reduce using rule 48 (expression_v -> ID array_or_func .)
    OR              reduce using rule 48 (expression_v -> ID array_or_func .)
    AND             reduce using rule 48 (expression_v -> ID array_or_func .)
    GT              reduce using rule 48 (expression_v -> ID array_or_func .)
    GTEQ            reduce using rule 48 (expression_v -> ID array_or_func .)
    LT              reduce using rule 48 (expression_v -> ID array_or_func .)
    LTEQ            reduce using rule 48 (expression_v -> ID array_or_func .)
    EQ              reduce using rule 48 (expression_v -> ID array_or_func .)
    NEQ             reduce using rule 48 (expression_v -> ID array_or_func .)
    END             reduce using rule 48 (expression_v -> ID array_or_func .)
    LCBRAC          reduce using rule 48 (expression_v -> ID array_or_func .)
    RSQBRAC         reduce using rule 48 (expression_v -> ID array_or_func .)
    COMMA           reduce using rule 48 (expression_v -> ID array_or_func .)


state 109

    (29) array_or_func -> LSQBRAC . expression RSQBRAC assg_arr_value
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 140
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 110

    (30) array_or_func -> assgn_statement_or_func_call .

    END             reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    PLUS            reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    MINUS           reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    TIMES           reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    DIVIDE          reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    MOD             reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    MUL             reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    RPAREN          reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    OR              reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    AND             reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    GT              reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    GTEQ            reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    LT              reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    LTEQ            reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    EQ              reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    NEQ             reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    LCBRAC          reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    RSQBRAC         reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)
    COMMA           reduce using rule 30 (array_or_func -> assgn_statement_or_func_call .)


state 111

    (88) assgn_statement_or_func_call -> assignment_statement .

    END             reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    PLUS            reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    MINUS           reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    TIMES           reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    DIVIDE          reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    MOD             reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    MUL             reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    RPAREN          reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    OR              reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    AND             reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    GT              reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    GTEQ            reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    LT              reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    LTEQ            reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    EQ              reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    NEQ             reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    LCBRAC          reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    RSQBRAC         reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)
    COMMA           reduce using rule 88 (assgn_statement_or_func_call -> assignment_statement .)


state 112

    (89) assgn_statement_or_func_call -> procedure_or_function_call .

    END             reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    PLUS            reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    MINUS           reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    TIMES           reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    DIVIDE          reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    MOD             reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    MUL             reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    RPAREN          reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    OR              reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    AND             reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    GT              reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    GTEQ            reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    LT              reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    LTEQ            reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    EQ              reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    NEQ             reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    LCBRAC          reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    RSQBRAC         reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)
    COMMA           reduce using rule 89 (assgn_statement_or_func_call -> procedure_or_function_call .)


state 113

    (90) assignment_statement -> give_value .

    END             reduce using rule 90 (assignment_statement -> give_value .)
    PLUS            reduce using rule 90 (assignment_statement -> give_value .)
    MINUS           reduce using rule 90 (assignment_statement -> give_value .)
    TIMES           reduce using rule 90 (assignment_statement -> give_value .)
    DIVIDE          reduce using rule 90 (assignment_statement -> give_value .)
    MOD             reduce using rule 90 (assignment_statement -> give_value .)
    MUL             reduce using rule 90 (assignment_statement -> give_value .)
    RPAREN          reduce using rule 90 (assignment_statement -> give_value .)
    OR              reduce using rule 90 (assignment_statement -> give_value .)
    AND             reduce using rule 90 (assignment_statement -> give_value .)
    GT              reduce using rule 90 (assignment_statement -> give_value .)
    GTEQ            reduce using rule 90 (assignment_statement -> give_value .)
    LT              reduce using rule 90 (assignment_statement -> give_value .)
    LTEQ            reduce using rule 90 (assignment_statement -> give_value .)
    EQ              reduce using rule 90 (assignment_statement -> give_value .)
    NEQ             reduce using rule 90 (assignment_statement -> give_value .)
    LCBRAC          reduce using rule 90 (assignment_statement -> give_value .)
    RSQBRAC         reduce using rule 90 (assignment_statement -> give_value .)
    COMMA           reduce using rule 90 (assignment_statement -> give_value .)


state 114

    (91) procedure_or_function_call -> param_list .

    END             reduce using rule 91 (procedure_or_function_call -> param_list .)
    PLUS            reduce using rule 91 (procedure_or_function_call -> param_list .)
    MINUS           reduce using rule 91 (procedure_or_function_call -> param_list .)
    TIMES           reduce using rule 91 (procedure_or_function_call -> param_list .)
    DIVIDE          reduce using rule 91 (procedure_or_function_call -> param_list .)
    MOD             reduce using rule 91 (procedure_or_function_call -> param_list .)
    MUL             reduce using rule 91 (procedure_or_function_call -> param_list .)
    RPAREN          reduce using rule 91 (procedure_or_function_call -> param_list .)
    OR              reduce using rule 91 (procedure_or_function_call -> param_list .)
    AND             reduce using rule 91 (procedure_or_function_call -> param_list .)
    GT              reduce using rule 91 (procedure_or_function_call -> param_list .)
    GTEQ            reduce using rule 91 (procedure_or_function_call -> param_list .)
    LT              reduce using rule 91 (procedure_or_function_call -> param_list .)
    LTEQ            reduce using rule 91 (procedure_or_function_call -> param_list .)
    EQ              reduce using rule 91 (procedure_or_function_call -> param_list .)
    NEQ             reduce using rule 91 (procedure_or_function_call -> param_list .)
    LCBRAC          reduce using rule 91 (procedure_or_function_call -> param_list .)
    RSQBRAC         reduce using rule 91 (procedure_or_function_call -> param_list .)
    COMMA           reduce using rule 91 (procedure_or_function_call -> param_list .)


state 115

    (92) param_list -> LPAREN . empty_or_param RPAREN
    (93) empty_or_param -> . ne_param_list
    (94) ne_param_list -> . ne_param_list_end
    (95) ne_param_list -> . ne_param_list_iter
    (97) ne_param_list_end -> . value
    (96) ne_param_list_iter -> . empty_or_param COMMA value
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEWARRAY        shift and go to state 72
    RPAREN          reduce using rule 26 (value -> .)
    COMMA           reduce using rule 26 (value -> .)
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    empty_or_param                 shift and go to state 141
    ne_param_list                  shift and go to state 142
    ne_param_list_end              shift and go to state 143
    ne_param_list_iter             shift and go to state 144
    value                          shift and go to state 145
    expression                     shift and go to state 69
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 116

    (25) value -> NEWARRAY LSQBRAC . expression RSQBRAC ps
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 146
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 117

    (68) function_dec_with_body -> LCBRAC body RCBRAC .

    VAR             reduce using rule 68 (function_dec_with_body -> LCBRAC body RCBRAC .)
    VAL             reduce using rule 68 (function_dec_with_body -> LCBRAC body RCBRAC .)
    FUNCTION        reduce using rule 68 (function_dec_with_body -> LCBRAC body RCBRAC .)
    $end            reduce using rule 68 (function_dec_with_body -> LCBRAC body RCBRAC .)


state 118

    (82) statement_list_iter -> statement_list statement .

    VAR             reduce using rule 82 (statement_list_iter -> statement_list statement .)
    VAL             reduce using rule 82 (statement_list_iter -> statement_list statement .)
    NEWARRAY        reduce using rule 82 (statement_list_iter -> statement_list statement .)
    IF              reduce using rule 82 (statement_list_iter -> statement_list statement .)
    WHILE           reduce using rule 82 (statement_list_iter -> statement_list statement .)
    NEG             reduce using rule 82 (statement_list_iter -> statement_list statement .)
    STRINGV         reduce using rule 82 (statement_list_iter -> statement_list statement .)
    CHARV           reduce using rule 82 (statement_list_iter -> statement_list statement .)
    LPAREN          reduce using rule 82 (statement_list_iter -> statement_list statement .)
    ID              reduce using rule 82 (statement_list_iter -> statement_list statement .)
    MINUS           reduce using rule 82 (statement_list_iter -> statement_list statement .)
    NUMBER          reduce using rule 82 (statement_list_iter -> statement_list statement .)
    REAL            reduce using rule 82 (statement_list_iter -> statement_list statement .)
    BOOLV           reduce using rule 82 (statement_list_iter -> statement_list statement .)
    END             reduce using rule 82 (statement_list_iter -> statement_list statement .)
    RCBRAC          reduce using rule 82 (statement_list_iter -> statement_list statement .)


state 119

    (85) statement -> value END .

    VAR             reduce using rule 85 (statement -> value END .)
    VAL             reduce using rule 85 (statement -> value END .)
    NEWARRAY        reduce using rule 85 (statement -> value END .)
    IF              reduce using rule 85 (statement -> value END .)
    WHILE           reduce using rule 85 (statement -> value END .)
    NEG             reduce using rule 85 (statement -> value END .)
    STRINGV         reduce using rule 85 (statement -> value END .)
    CHARV           reduce using rule 85 (statement -> value END .)
    LPAREN          reduce using rule 85 (statement -> value END .)
    ID              reduce using rule 85 (statement -> value END .)
    MINUS           reduce using rule 85 (statement -> value END .)
    NUMBER          reduce using rule 85 (statement -> value END .)
    REAL            reduce using rule 85 (statement -> value END .)
    BOOLV           reduce using rule 85 (statement -> value END .)
    END             reduce using rule 85 (statement -> value END .)
    RCBRAC          reduce using rule 85 (statement -> value END .)


state 120

    (98) if_statement -> IF expression . LCBRAC statement_list RCBRAC else_statement
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    LCBRAC          shift and go to state 147
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99


state 121

    (103) while_statement -> WHILE expression . LCBRAC statement_list RCBRAC
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    LCBRAC          shift and go to state 148
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99


state 122

    (77) field -> VAL ID DEF type .

    COMMA           reduce using rule 77 (field -> VAL ID DEF type .)
    RPAREN          reduce using rule 77 (field -> VAL ID DEF type .)


state 123

    (78) field -> VAR ID DEF type .

    COMMA           reduce using rule 78 (field -> VAR ID DEF type .)
    RPAREN          reduce using rule 78 (field -> VAR ID DEF type .)


state 124

    (44) expression_v -> LPAREN expression RPAREN .

    PLUS            reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    MOD             reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    MUL             reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    OR              reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    AND             reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    GT              reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    GTEQ            reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    LT              reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    LTEQ            reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    EQ              reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    END             reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    LCBRAC          reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    RSQBRAC         reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 44 (expression_v -> LPAREN expression RPAREN .)


state 125

    (11) liquid_type -> LPAREN expression RPAREN give_value .

    END             reduce using rule 11 (liquid_type -> LPAREN expression RPAREN give_value .)


state 126

    (54) expression -> expression OR expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 54 (expression -> expression OR expression .)
    OR              reduce using rule 54 (expression -> expression OR expression .)
    END             reduce using rule 54 (expression -> expression OR expression .)
    PLUS            reduce using rule 54 (expression -> expression OR expression .)
    MINUS           reduce using rule 54 (expression -> expression OR expression .)
    TIMES           reduce using rule 54 (expression -> expression OR expression .)
    DIVIDE          reduce using rule 54 (expression -> expression OR expression .)
    MOD             reduce using rule 54 (expression -> expression OR expression .)
    MUL             reduce using rule 54 (expression -> expression OR expression .)
    LCBRAC          reduce using rule 54 (expression -> expression OR expression .)
    RSQBRAC         reduce using rule 54 (expression -> expression OR expression .)
    COMMA           reduce using rule 54 (expression -> expression OR expression .)
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99

  ! AND             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! GTEQ            [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! LTEQ            [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 54 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 92 ]


state 127

    (55) expression -> expression AND expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 55 (expression -> expression AND expression .)
    OR              reduce using rule 55 (expression -> expression AND expression .)
    AND             reduce using rule 55 (expression -> expression AND expression .)
    END             reduce using rule 55 (expression -> expression AND expression .)
    PLUS            reduce using rule 55 (expression -> expression AND expression .)
    MINUS           reduce using rule 55 (expression -> expression AND expression .)
    TIMES           reduce using rule 55 (expression -> expression AND expression .)
    DIVIDE          reduce using rule 55 (expression -> expression AND expression .)
    MOD             reduce using rule 55 (expression -> expression AND expression .)
    MUL             reduce using rule 55 (expression -> expression AND expression .)
    LCBRAC          reduce using rule 55 (expression -> expression AND expression .)
    RSQBRAC         reduce using rule 55 (expression -> expression AND expression .)
    COMMA           reduce using rule 55 (expression -> expression AND expression .)
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99

  ! GT              [ reduce using rule 55 (expression -> expression AND expression .) ]
  ! GTEQ            [ reduce using rule 55 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 55 (expression -> expression AND expression .) ]
  ! LTEQ            [ reduce using rule 55 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 55 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 55 (expression -> expression AND expression .) ]
  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]


state 128

    (57) expression -> expression GT expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 57 (expression -> expression GT expression .)
    OR              reduce using rule 57 (expression -> expression GT expression .)
    AND             reduce using rule 57 (expression -> expression GT expression .)
    GT              reduce using rule 57 (expression -> expression GT expression .)
    GTEQ            reduce using rule 57 (expression -> expression GT expression .)
    LT              reduce using rule 57 (expression -> expression GT expression .)
    LTEQ            reduce using rule 57 (expression -> expression GT expression .)
    EQ              reduce using rule 57 (expression -> expression GT expression .)
    NEQ             reduce using rule 57 (expression -> expression GT expression .)
    END             reduce using rule 57 (expression -> expression GT expression .)
    PLUS            reduce using rule 57 (expression -> expression GT expression .)
    MINUS           reduce using rule 57 (expression -> expression GT expression .)
    TIMES           reduce using rule 57 (expression -> expression GT expression .)
    DIVIDE          reduce using rule 57 (expression -> expression GT expression .)
    MOD             reduce using rule 57 (expression -> expression GT expression .)
    MUL             reduce using rule 57 (expression -> expression GT expression .)
    LCBRAC          reduce using rule 57 (expression -> expression GT expression .)
    RSQBRAC         reduce using rule 57 (expression -> expression GT expression .)
    COMMA           reduce using rule 57 (expression -> expression GT expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 129

    (58) expression -> expression GTEQ expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 58 (expression -> expression GTEQ expression .)
    OR              reduce using rule 58 (expression -> expression GTEQ expression .)
    AND             reduce using rule 58 (expression -> expression GTEQ expression .)
    GT              reduce using rule 58 (expression -> expression GTEQ expression .)
    GTEQ            reduce using rule 58 (expression -> expression GTEQ expression .)
    LT              reduce using rule 58 (expression -> expression GTEQ expression .)
    LTEQ            reduce using rule 58 (expression -> expression GTEQ expression .)
    EQ              reduce using rule 58 (expression -> expression GTEQ expression .)
    NEQ             reduce using rule 58 (expression -> expression GTEQ expression .)
    END             reduce using rule 58 (expression -> expression GTEQ expression .)
    PLUS            reduce using rule 58 (expression -> expression GTEQ expression .)
    MINUS           reduce using rule 58 (expression -> expression GTEQ expression .)
    TIMES           reduce using rule 58 (expression -> expression GTEQ expression .)
    DIVIDE          reduce using rule 58 (expression -> expression GTEQ expression .)
    MOD             reduce using rule 58 (expression -> expression GTEQ expression .)
    MUL             reduce using rule 58 (expression -> expression GTEQ expression .)
    LCBRAC          reduce using rule 58 (expression -> expression GTEQ expression .)
    RSQBRAC         reduce using rule 58 (expression -> expression GTEQ expression .)
    COMMA           reduce using rule 58 (expression -> expression GTEQ expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 130

    (59) expression -> expression LT expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 59 (expression -> expression LT expression .)
    OR              reduce using rule 59 (expression -> expression LT expression .)
    AND             reduce using rule 59 (expression -> expression LT expression .)
    GT              reduce using rule 59 (expression -> expression LT expression .)
    GTEQ            reduce using rule 59 (expression -> expression LT expression .)
    LT              reduce using rule 59 (expression -> expression LT expression .)
    LTEQ            reduce using rule 59 (expression -> expression LT expression .)
    EQ              reduce using rule 59 (expression -> expression LT expression .)
    NEQ             reduce using rule 59 (expression -> expression LT expression .)
    END             reduce using rule 59 (expression -> expression LT expression .)
    PLUS            reduce using rule 59 (expression -> expression LT expression .)
    MINUS           reduce using rule 59 (expression -> expression LT expression .)
    TIMES           reduce using rule 59 (expression -> expression LT expression .)
    DIVIDE          reduce using rule 59 (expression -> expression LT expression .)
    MOD             reduce using rule 59 (expression -> expression LT expression .)
    MUL             reduce using rule 59 (expression -> expression LT expression .)
    LCBRAC          reduce using rule 59 (expression -> expression LT expression .)
    RSQBRAC         reduce using rule 59 (expression -> expression LT expression .)
    COMMA           reduce using rule 59 (expression -> expression LT expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 131

    (60) expression -> expression LTEQ expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 60 (expression -> expression LTEQ expression .)
    OR              reduce using rule 60 (expression -> expression LTEQ expression .)
    AND             reduce using rule 60 (expression -> expression LTEQ expression .)
    GT              reduce using rule 60 (expression -> expression LTEQ expression .)
    GTEQ            reduce using rule 60 (expression -> expression LTEQ expression .)
    LT              reduce using rule 60 (expression -> expression LTEQ expression .)
    LTEQ            reduce using rule 60 (expression -> expression LTEQ expression .)
    EQ              reduce using rule 60 (expression -> expression LTEQ expression .)
    NEQ             reduce using rule 60 (expression -> expression LTEQ expression .)
    END             reduce using rule 60 (expression -> expression LTEQ expression .)
    PLUS            reduce using rule 60 (expression -> expression LTEQ expression .)
    MINUS           reduce using rule 60 (expression -> expression LTEQ expression .)
    TIMES           reduce using rule 60 (expression -> expression LTEQ expression .)
    DIVIDE          reduce using rule 60 (expression -> expression LTEQ expression .)
    MOD             reduce using rule 60 (expression -> expression LTEQ expression .)
    MUL             reduce using rule 60 (expression -> expression LTEQ expression .)
    LCBRAC          reduce using rule 60 (expression -> expression LTEQ expression .)
    RSQBRAC         reduce using rule 60 (expression -> expression LTEQ expression .)
    COMMA           reduce using rule 60 (expression -> expression LTEQ expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 132

    (61) expression -> expression EQ expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 61 (expression -> expression EQ expression .)
    OR              reduce using rule 61 (expression -> expression EQ expression .)
    AND             reduce using rule 61 (expression -> expression EQ expression .)
    GT              reduce using rule 61 (expression -> expression EQ expression .)
    GTEQ            reduce using rule 61 (expression -> expression EQ expression .)
    LT              reduce using rule 61 (expression -> expression EQ expression .)
    LTEQ            reduce using rule 61 (expression -> expression EQ expression .)
    EQ              reduce using rule 61 (expression -> expression EQ expression .)
    NEQ             reduce using rule 61 (expression -> expression EQ expression .)
    END             reduce using rule 61 (expression -> expression EQ expression .)
    PLUS            reduce using rule 61 (expression -> expression EQ expression .)
    MINUS           reduce using rule 61 (expression -> expression EQ expression .)
    TIMES           reduce using rule 61 (expression -> expression EQ expression .)
    DIVIDE          reduce using rule 61 (expression -> expression EQ expression .)
    MOD             reduce using rule 61 (expression -> expression EQ expression .)
    MUL             reduce using rule 61 (expression -> expression EQ expression .)
    LCBRAC          reduce using rule 61 (expression -> expression EQ expression .)
    RSQBRAC         reduce using rule 61 (expression -> expression EQ expression .)
    COMMA           reduce using rule 61 (expression -> expression EQ expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 133

    (62) expression -> expression NEQ expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 62 (expression -> expression NEQ expression .)
    OR              reduce using rule 62 (expression -> expression NEQ expression .)
    AND             reduce using rule 62 (expression -> expression NEQ expression .)
    GT              reduce using rule 62 (expression -> expression NEQ expression .)
    GTEQ            reduce using rule 62 (expression -> expression NEQ expression .)
    LT              reduce using rule 62 (expression -> expression NEQ expression .)
    LTEQ            reduce using rule 62 (expression -> expression NEQ expression .)
    EQ              reduce using rule 62 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 62 (expression -> expression NEQ expression .)
    END             reduce using rule 62 (expression -> expression NEQ expression .)
    PLUS            reduce using rule 62 (expression -> expression NEQ expression .)
    MINUS           reduce using rule 62 (expression -> expression NEQ expression .)
    TIMES           reduce using rule 62 (expression -> expression NEQ expression .)
    DIVIDE          reduce using rule 62 (expression -> expression NEQ expression .)
    MOD             reduce using rule 62 (expression -> expression NEQ expression .)
    MUL             reduce using rule 62 (expression -> expression NEQ expression .)
    LCBRAC          reduce using rule 62 (expression -> expression NEQ expression .)
    RSQBRAC         reduce using rule 62 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 62 (expression -> expression NEQ expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 134

    (35) expression -> expression_v PLUS expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 35 (expression -> expression_v PLUS expression .)
    OR              reduce using rule 35 (expression -> expression_v PLUS expression .)
    AND             reduce using rule 35 (expression -> expression_v PLUS expression .)
    GT              reduce using rule 35 (expression -> expression_v PLUS expression .)
    GTEQ            reduce using rule 35 (expression -> expression_v PLUS expression .)
    LT              reduce using rule 35 (expression -> expression_v PLUS expression .)
    LTEQ            reduce using rule 35 (expression -> expression_v PLUS expression .)
    EQ              reduce using rule 35 (expression -> expression_v PLUS expression .)
    NEQ             reduce using rule 35 (expression -> expression_v PLUS expression .)
    END             reduce using rule 35 (expression -> expression_v PLUS expression .)
    PLUS            reduce using rule 35 (expression -> expression_v PLUS expression .)
    MINUS           reduce using rule 35 (expression -> expression_v PLUS expression .)
    TIMES           reduce using rule 35 (expression -> expression_v PLUS expression .)
    DIVIDE          reduce using rule 35 (expression -> expression_v PLUS expression .)
    MOD             reduce using rule 35 (expression -> expression_v PLUS expression .)
    MUL             reduce using rule 35 (expression -> expression_v PLUS expression .)
    LCBRAC          reduce using rule 35 (expression -> expression_v PLUS expression .)
    RSQBRAC         reduce using rule 35 (expression -> expression_v PLUS expression .)
    COMMA           reduce using rule 35 (expression -> expression_v PLUS expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 135

    (36) expression -> expression_v MINUS expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 36 (expression -> expression_v MINUS expression .)
    OR              reduce using rule 36 (expression -> expression_v MINUS expression .)
    AND             reduce using rule 36 (expression -> expression_v MINUS expression .)
    GT              reduce using rule 36 (expression -> expression_v MINUS expression .)
    GTEQ            reduce using rule 36 (expression -> expression_v MINUS expression .)
    LT              reduce using rule 36 (expression -> expression_v MINUS expression .)
    LTEQ            reduce using rule 36 (expression -> expression_v MINUS expression .)
    EQ              reduce using rule 36 (expression -> expression_v MINUS expression .)
    NEQ             reduce using rule 36 (expression -> expression_v MINUS expression .)
    END             reduce using rule 36 (expression -> expression_v MINUS expression .)
    PLUS            reduce using rule 36 (expression -> expression_v MINUS expression .)
    MINUS           reduce using rule 36 (expression -> expression_v MINUS expression .)
    TIMES           reduce using rule 36 (expression -> expression_v MINUS expression .)
    DIVIDE          reduce using rule 36 (expression -> expression_v MINUS expression .)
    MOD             reduce using rule 36 (expression -> expression_v MINUS expression .)
    MUL             reduce using rule 36 (expression -> expression_v MINUS expression .)
    LCBRAC          reduce using rule 36 (expression -> expression_v MINUS expression .)
    RSQBRAC         reduce using rule 36 (expression -> expression_v MINUS expression .)
    COMMA           reduce using rule 36 (expression -> expression_v MINUS expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 136

    (37) expression -> expression_v TIMES expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 37 (expression -> expression_v TIMES expression .)
    OR              reduce using rule 37 (expression -> expression_v TIMES expression .)
    AND             reduce using rule 37 (expression -> expression_v TIMES expression .)
    GT              reduce using rule 37 (expression -> expression_v TIMES expression .)
    GTEQ            reduce using rule 37 (expression -> expression_v TIMES expression .)
    LT              reduce using rule 37 (expression -> expression_v TIMES expression .)
    LTEQ            reduce using rule 37 (expression -> expression_v TIMES expression .)
    EQ              reduce using rule 37 (expression -> expression_v TIMES expression .)
    NEQ             reduce using rule 37 (expression -> expression_v TIMES expression .)
    END             reduce using rule 37 (expression -> expression_v TIMES expression .)
    PLUS            reduce using rule 37 (expression -> expression_v TIMES expression .)
    MINUS           reduce using rule 37 (expression -> expression_v TIMES expression .)
    TIMES           reduce using rule 37 (expression -> expression_v TIMES expression .)
    DIVIDE          reduce using rule 37 (expression -> expression_v TIMES expression .)
    MOD             reduce using rule 37 (expression -> expression_v TIMES expression .)
    MUL             reduce using rule 37 (expression -> expression_v TIMES expression .)
    LCBRAC          reduce using rule 37 (expression -> expression_v TIMES expression .)
    RSQBRAC         reduce using rule 37 (expression -> expression_v TIMES expression .)
    COMMA           reduce using rule 37 (expression -> expression_v TIMES expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 137

    (38) expression -> expression_v DIVIDE expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    OR              reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    AND             reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    GT              reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    GTEQ            reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    LT              reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    LTEQ            reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    EQ              reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    NEQ             reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    END             reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    PLUS            reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    MINUS           reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    TIMES           reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    DIVIDE          reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    MOD             reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    MUL             reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    LCBRAC          reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    RSQBRAC         reduce using rule 38 (expression -> expression_v DIVIDE expression .)
    COMMA           reduce using rule 38 (expression -> expression_v DIVIDE expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 138

    (39) expression -> expression_v MOD expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 39 (expression -> expression_v MOD expression .)
    OR              reduce using rule 39 (expression -> expression_v MOD expression .)
    AND             reduce using rule 39 (expression -> expression_v MOD expression .)
    GT              reduce using rule 39 (expression -> expression_v MOD expression .)
    GTEQ            reduce using rule 39 (expression -> expression_v MOD expression .)
    LT              reduce using rule 39 (expression -> expression_v MOD expression .)
    LTEQ            reduce using rule 39 (expression -> expression_v MOD expression .)
    EQ              reduce using rule 39 (expression -> expression_v MOD expression .)
    NEQ             reduce using rule 39 (expression -> expression_v MOD expression .)
    END             reduce using rule 39 (expression -> expression_v MOD expression .)
    PLUS            reduce using rule 39 (expression -> expression_v MOD expression .)
    MINUS           reduce using rule 39 (expression -> expression_v MOD expression .)
    TIMES           reduce using rule 39 (expression -> expression_v MOD expression .)
    DIVIDE          reduce using rule 39 (expression -> expression_v MOD expression .)
    MOD             reduce using rule 39 (expression -> expression_v MOD expression .)
    MUL             reduce using rule 39 (expression -> expression_v MOD expression .)
    LCBRAC          reduce using rule 39 (expression -> expression_v MOD expression .)
    RSQBRAC         reduce using rule 39 (expression -> expression_v MOD expression .)
    COMMA           reduce using rule 39 (expression -> expression_v MOD expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 139

    (40) expression -> expression_v MUL expression .
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RPAREN          reduce using rule 40 (expression -> expression_v MUL expression .)
    OR              reduce using rule 40 (expression -> expression_v MUL expression .)
    AND             reduce using rule 40 (expression -> expression_v MUL expression .)
    GT              reduce using rule 40 (expression -> expression_v MUL expression .)
    GTEQ            reduce using rule 40 (expression -> expression_v MUL expression .)
    LT              reduce using rule 40 (expression -> expression_v MUL expression .)
    LTEQ            reduce using rule 40 (expression -> expression_v MUL expression .)
    EQ              reduce using rule 40 (expression -> expression_v MUL expression .)
    NEQ             reduce using rule 40 (expression -> expression_v MUL expression .)
    END             reduce using rule 40 (expression -> expression_v MUL expression .)
    PLUS            reduce using rule 40 (expression -> expression_v MUL expression .)
    MINUS           reduce using rule 40 (expression -> expression_v MUL expression .)
    TIMES           reduce using rule 40 (expression -> expression_v MUL expression .)
    DIVIDE          reduce using rule 40 (expression -> expression_v MUL expression .)
    MOD             reduce using rule 40 (expression -> expression_v MUL expression .)
    MUL             reduce using rule 40 (expression -> expression_v MUL expression .)
    LCBRAC          reduce using rule 40 (expression -> expression_v MUL expression .)
    RSQBRAC         reduce using rule 40 (expression -> expression_v MUL expression .)
    COMMA           reduce using rule 40 (expression -> expression_v MUL expression .)

  ! OR              [ shift and go to state 92 ]
  ! AND             [ shift and go to state 93 ]
  ! GT              [ shift and go to state 94 ]
  ! GTEQ            [ shift and go to state 95 ]
  ! LT              [ shift and go to state 96 ]
  ! LTEQ            [ shift and go to state 97 ]
  ! EQ              [ shift and go to state 98 ]
  ! NEQ             [ shift and go to state 99 ]


state 140

    (29) array_or_func -> LSQBRAC expression . RSQBRAC assg_arr_value
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RSQBRAC         shift and go to state 149
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99


state 141

    (92) param_list -> LPAREN empty_or_param . RPAREN
    (96) ne_param_list_iter -> empty_or_param . COMMA value

    RPAREN          shift and go to state 150
    COMMA           shift and go to state 151


state 142

    (93) empty_or_param -> ne_param_list .

    RPAREN          reduce using rule 93 (empty_or_param -> ne_param_list .)
    COMMA           reduce using rule 93 (empty_or_param -> ne_param_list .)


state 143

    (94) ne_param_list -> ne_param_list_end .

    RPAREN          reduce using rule 94 (ne_param_list -> ne_param_list_end .)
    COMMA           reduce using rule 94 (ne_param_list -> ne_param_list_end .)


state 144

    (95) ne_param_list -> ne_param_list_iter .

    RPAREN          reduce using rule 95 (ne_param_list -> ne_param_list_iter .)
    COMMA           reduce using rule 95 (ne_param_list -> ne_param_list_iter .)


state 145

    (97) ne_param_list_end -> value .

    RPAREN          reduce using rule 97 (ne_param_list_end -> value .)
    COMMA           reduce using rule 97 (ne_param_list_end -> value .)


state 146

    (25) value -> NEWARRAY LSQBRAC expression . RSQBRAC ps
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RSQBRAC         shift and go to state 152
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99


state 147

    (98) if_statement -> IF expression LCBRAC . statement_list RCBRAC else_statement
    (80) statement_list -> . statement_list_end
    (81) statement_list -> . statement_list_iter
    (83) statement_list_end -> . statement
    (82) statement_list_iter -> . statement_list statement
    (84) statement -> . variable_declaration
    (85) statement -> . value END
    (86) statement -> . if_statement
    (87) statement -> . while_statement
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement
    (103) while_statement -> . WHILE expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 69
    statement_list                 shift and go to state 153
    statement_list_end             shift and go to state 78
    statement_list_iter            shift and go to state 79
    statement                      shift and go to state 80
    variable_declaration           shift and go to state 81
    value                          shift and go to state 82
    if_statement                   shift and go to state 83
    while_statement                shift and go to state 84
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 148

    (103) while_statement -> WHILE expression LCBRAC . statement_list RCBRAC
    (80) statement_list -> . statement_list_end
    (81) statement_list -> . statement_list_iter
    (83) statement_list_end -> . statement
    (82) statement_list_iter -> . statement_list statement
    (84) statement -> . variable_declaration
    (85) statement -> . value END
    (86) statement -> . if_statement
    (87) statement -> . while_statement
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement
    (103) while_statement -> . WHILE expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 69
    statement_list                 shift and go to state 154
    statement_list_end             shift and go to state 78
    statement_list_iter            shift and go to state 79
    statement                      shift and go to state 80
    variable_declaration           shift and go to state 81
    value                          shift and go to state 82
    if_statement                   shift and go to state 83
    while_statement                shift and go to state 84
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 149

    (29) array_or_func -> LSQBRAC expression RSQBRAC . assg_arr_value
    (32) assg_arr_value -> . give_value
    (33) assg_arr_value -> . array_or_func
    (34) assg_arr_value -> .
    (13) give_value -> . ASSIGN value
    (14) give_value -> .
    (29) array_or_func -> . LSQBRAC expression RSQBRAC assg_arr_value
    (30) array_or_func -> . assgn_statement_or_func_call
    (31) array_or_func -> .
    (88) assgn_statement_or_func_call -> . assignment_statement
    (89) assgn_statement_or_func_call -> . procedure_or_function_call
    (90) assignment_statement -> . give_value
    (91) procedure_or_function_call -> . param_list
    (92) param_list -> . LPAREN empty_or_param RPAREN

  ! reduce/reduce conflict for END resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MOD resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MUL resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for OR resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for AND resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for GT resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for GTEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LT resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LTEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for EQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for NEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LCBRAC resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for RSQBRAC resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for END resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MOD resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for MUL resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for OR resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for AND resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for GT resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for GTEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LT resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LTEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for EQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for NEQ resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for LCBRAC resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for RSQBRAC resolved using rule 14 (give_value -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 14 (give_value -> .)
    ASSIGN          shift and go to state 43
    END             reduce using rule 14 (give_value -> .)
    PLUS            reduce using rule 14 (give_value -> .)
    MINUS           reduce using rule 14 (give_value -> .)
    TIMES           reduce using rule 14 (give_value -> .)
    DIVIDE          reduce using rule 14 (give_value -> .)
    MOD             reduce using rule 14 (give_value -> .)
    MUL             reduce using rule 14 (give_value -> .)
    RPAREN          reduce using rule 14 (give_value -> .)
    OR              reduce using rule 14 (give_value -> .)
    AND             reduce using rule 14 (give_value -> .)
    GT              reduce using rule 14 (give_value -> .)
    GTEQ            reduce using rule 14 (give_value -> .)
    LT              reduce using rule 14 (give_value -> .)
    LTEQ            reduce using rule 14 (give_value -> .)
    EQ              reduce using rule 14 (give_value -> .)
    NEQ             reduce using rule 14 (give_value -> .)
    LCBRAC          reduce using rule 14 (give_value -> .)
    RSQBRAC         reduce using rule 14 (give_value -> .)
    COMMA           reduce using rule 14 (give_value -> .)
    LSQBRAC         shift and go to state 109
    LPAREN          shift and go to state 115

  ! END             [ reduce using rule 34 (assg_arr_value -> .) ]
  ! PLUS            [ reduce using rule 34 (assg_arr_value -> .) ]
  ! MINUS           [ reduce using rule 34 (assg_arr_value -> .) ]
  ! TIMES           [ reduce using rule 34 (assg_arr_value -> .) ]
  ! DIVIDE          [ reduce using rule 34 (assg_arr_value -> .) ]
  ! MOD             [ reduce using rule 34 (assg_arr_value -> .) ]
  ! MUL             [ reduce using rule 34 (assg_arr_value -> .) ]
  ! RPAREN          [ reduce using rule 34 (assg_arr_value -> .) ]
  ! OR              [ reduce using rule 34 (assg_arr_value -> .) ]
  ! AND             [ reduce using rule 34 (assg_arr_value -> .) ]
  ! GT              [ reduce using rule 34 (assg_arr_value -> .) ]
  ! GTEQ            [ reduce using rule 34 (assg_arr_value -> .) ]
  ! LT              [ reduce using rule 34 (assg_arr_value -> .) ]
  ! LTEQ            [ reduce using rule 34 (assg_arr_value -> .) ]
  ! EQ              [ reduce using rule 34 (assg_arr_value -> .) ]
  ! NEQ             [ reduce using rule 34 (assg_arr_value -> .) ]
  ! LCBRAC          [ reduce using rule 34 (assg_arr_value -> .) ]
  ! RSQBRAC         [ reduce using rule 34 (assg_arr_value -> .) ]
  ! COMMA           [ reduce using rule 34 (assg_arr_value -> .) ]
  ! END             [ reduce using rule 31 (array_or_func -> .) ]
  ! PLUS            [ reduce using rule 31 (array_or_func -> .) ]
  ! MINUS           [ reduce using rule 31 (array_or_func -> .) ]
  ! TIMES           [ reduce using rule 31 (array_or_func -> .) ]
  ! DIVIDE          [ reduce using rule 31 (array_or_func -> .) ]
  ! MOD             [ reduce using rule 31 (array_or_func -> .) ]
  ! MUL             [ reduce using rule 31 (array_or_func -> .) ]
  ! RPAREN          [ reduce using rule 31 (array_or_func -> .) ]
  ! OR              [ reduce using rule 31 (array_or_func -> .) ]
  ! AND             [ reduce using rule 31 (array_or_func -> .) ]
  ! GT              [ reduce using rule 31 (array_or_func -> .) ]
  ! GTEQ            [ reduce using rule 31 (array_or_func -> .) ]
  ! LT              [ reduce using rule 31 (array_or_func -> .) ]
  ! LTEQ            [ reduce using rule 31 (array_or_func -> .) ]
  ! EQ              [ reduce using rule 31 (array_or_func -> .) ]
  ! NEQ             [ reduce using rule 31 (array_or_func -> .) ]
  ! LCBRAC          [ reduce using rule 31 (array_or_func -> .) ]
  ! RSQBRAC         [ reduce using rule 31 (array_or_func -> .) ]
  ! COMMA           [ reduce using rule 31 (array_or_func -> .) ]

    assg_arr_value                 shift and go to state 155
    give_value                     shift and go to state 156
    array_or_func                  shift and go to state 157
    assgn_statement_or_func_call   shift and go to state 110
    assignment_statement           shift and go to state 111
    procedure_or_function_call     shift and go to state 112
    param_list                     shift and go to state 114

state 150

    (92) param_list -> LPAREN empty_or_param RPAREN .

    END             reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    PLUS            reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    MINUS           reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    TIMES           reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    DIVIDE          reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    MOD             reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    MUL             reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    RPAREN          reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    OR              reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    AND             reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    GT              reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    GTEQ            reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    LT              reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    LTEQ            reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    EQ              reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    NEQ             reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    LCBRAC          reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    RSQBRAC         reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)
    COMMA           reduce using rule 92 (param_list -> LPAREN empty_or_param RPAREN .)


state 151

    (96) ne_param_list_iter -> empty_or_param COMMA . value
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEWARRAY        shift and go to state 72
    RPAREN          reduce using rule 26 (value -> .)
    COMMA           reduce using rule 26 (value -> .)
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    value                          shift and go to state 158
    expression                     shift and go to state 69
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 152

    (25) value -> NEWARRAY LSQBRAC expression RSQBRAC . ps
    (27) ps -> . LSQBRAC expression RSQBRAC ps
    (28) ps -> .

    LSQBRAC         shift and go to state 159
    END             reduce using rule 28 (ps -> .)
    PLUS            reduce using rule 28 (ps -> .)
    MINUS           reduce using rule 28 (ps -> .)
    TIMES           reduce using rule 28 (ps -> .)
    DIVIDE          reduce using rule 28 (ps -> .)
    MOD             reduce using rule 28 (ps -> .)
    MUL             reduce using rule 28 (ps -> .)
    RPAREN          reduce using rule 28 (ps -> .)
    OR              reduce using rule 28 (ps -> .)
    AND             reduce using rule 28 (ps -> .)
    GT              reduce using rule 28 (ps -> .)
    GTEQ            reduce using rule 28 (ps -> .)
    LT              reduce using rule 28 (ps -> .)
    LTEQ            reduce using rule 28 (ps -> .)
    EQ              reduce using rule 28 (ps -> .)
    NEQ             reduce using rule 28 (ps -> .)
    LCBRAC          reduce using rule 28 (ps -> .)
    RSQBRAC         reduce using rule 28 (ps -> .)
    COMMA           reduce using rule 28 (ps -> .)

    ps                             shift and go to state 160

state 153

    (98) if_statement -> IF expression LCBRAC statement_list . RCBRAC else_statement
    (82) statement_list_iter -> statement_list . statement
    (84) statement -> . variable_declaration
    (85) statement -> . value END
    (86) statement -> . if_statement
    (87) statement -> . while_statement
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement
    (103) while_statement -> . WHILE expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    RCBRAC          shift and go to state 161
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 69
    statement                      shift and go to state 118
    variable_declaration           shift and go to state 81
    value                          shift and go to state 82
    if_statement                   shift and go to state 83
    while_statement                shift and go to state 84
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 154

    (103) while_statement -> WHILE expression LCBRAC statement_list . RCBRAC
    (82) statement_list_iter -> statement_list . statement
    (84) statement -> . variable_declaration
    (85) statement -> . value END
    (86) statement -> . if_statement
    (87) statement -> . while_statement
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement
    (103) while_statement -> . WHILE expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    RCBRAC          shift and go to state 162
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 69
    statement                      shift and go to state 118
    variable_declaration           shift and go to state 81
    value                          shift and go to state 82
    if_statement                   shift and go to state 83
    while_statement                shift and go to state 84
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 155

    (29) array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .

    END             reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    PLUS            reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    MINUS           reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    TIMES           reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    DIVIDE          reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    MOD             reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    MUL             reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    RPAREN          reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    OR              reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    AND             reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    GT              reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    GTEQ            reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    LT              reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    LTEQ            reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    EQ              reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    NEQ             reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    LCBRAC          reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    RSQBRAC         reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)
    COMMA           reduce using rule 29 (array_or_func -> LSQBRAC expression RSQBRAC assg_arr_value .)


state 156

    (32) assg_arr_value -> give_value .
    (90) assignment_statement -> give_value .

  ! reduce/reduce conflict for END resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for PLUS resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for MINUS resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for TIMES resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for MOD resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for MUL resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for RPAREN resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for OR resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for AND resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for GT resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for GTEQ resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for LT resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for LTEQ resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for EQ resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for NEQ resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for LCBRAC resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for RSQBRAC resolved using rule 32 (assg_arr_value -> give_value .)
  ! reduce/reduce conflict for COMMA resolved using rule 32 (assg_arr_value -> give_value .)
    END             reduce using rule 32 (assg_arr_value -> give_value .)
    PLUS            reduce using rule 32 (assg_arr_value -> give_value .)
    MINUS           reduce using rule 32 (assg_arr_value -> give_value .)
    TIMES           reduce using rule 32 (assg_arr_value -> give_value .)
    DIVIDE          reduce using rule 32 (assg_arr_value -> give_value .)
    MOD             reduce using rule 32 (assg_arr_value -> give_value .)
    MUL             reduce using rule 32 (assg_arr_value -> give_value .)
    RPAREN          reduce using rule 32 (assg_arr_value -> give_value .)
    OR              reduce using rule 32 (assg_arr_value -> give_value .)
    AND             reduce using rule 32 (assg_arr_value -> give_value .)
    GT              reduce using rule 32 (assg_arr_value -> give_value .)
    GTEQ            reduce using rule 32 (assg_arr_value -> give_value .)
    LT              reduce using rule 32 (assg_arr_value -> give_value .)
    LTEQ            reduce using rule 32 (assg_arr_value -> give_value .)
    EQ              reduce using rule 32 (assg_arr_value -> give_value .)
    NEQ             reduce using rule 32 (assg_arr_value -> give_value .)
    LCBRAC          reduce using rule 32 (assg_arr_value -> give_value .)
    RSQBRAC         reduce using rule 32 (assg_arr_value -> give_value .)
    COMMA           reduce using rule 32 (assg_arr_value -> give_value .)

  ! END             [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! PLUS            [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! MINUS           [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! TIMES           [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! DIVIDE          [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! MOD             [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! MUL             [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! RPAREN          [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! OR              [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! AND             [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! GT              [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! GTEQ            [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! LT              [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! LTEQ            [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! EQ              [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! NEQ             [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! LCBRAC          [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! RSQBRAC         [ reduce using rule 90 (assignment_statement -> give_value .) ]
  ! COMMA           [ reduce using rule 90 (assignment_statement -> give_value .) ]


state 157

    (33) assg_arr_value -> array_or_func .

    END             reduce using rule 33 (assg_arr_value -> array_or_func .)
    PLUS            reduce using rule 33 (assg_arr_value -> array_or_func .)
    MINUS           reduce using rule 33 (assg_arr_value -> array_or_func .)
    TIMES           reduce using rule 33 (assg_arr_value -> array_or_func .)
    DIVIDE          reduce using rule 33 (assg_arr_value -> array_or_func .)
    MOD             reduce using rule 33 (assg_arr_value -> array_or_func .)
    MUL             reduce using rule 33 (assg_arr_value -> array_or_func .)
    RPAREN          reduce using rule 33 (assg_arr_value -> array_or_func .)
    OR              reduce using rule 33 (assg_arr_value -> array_or_func .)
    AND             reduce using rule 33 (assg_arr_value -> array_or_func .)
    GT              reduce using rule 33 (assg_arr_value -> array_or_func .)
    GTEQ            reduce using rule 33 (assg_arr_value -> array_or_func .)
    LT              reduce using rule 33 (assg_arr_value -> array_or_func .)
    LTEQ            reduce using rule 33 (assg_arr_value -> array_or_func .)
    EQ              reduce using rule 33 (assg_arr_value -> array_or_func .)
    NEQ             reduce using rule 33 (assg_arr_value -> array_or_func .)
    LCBRAC          reduce using rule 33 (assg_arr_value -> array_or_func .)
    RSQBRAC         reduce using rule 33 (assg_arr_value -> array_or_func .)
    COMMA           reduce using rule 33 (assg_arr_value -> array_or_func .)


state 158

    (96) ne_param_list_iter -> empty_or_param COMMA value .

    RPAREN          reduce using rule 96 (ne_param_list_iter -> empty_or_param COMMA value .)
    COMMA           reduce using rule 96 (ne_param_list_iter -> empty_or_param COMMA value .)


state 159

    (27) ps -> LSQBRAC . expression RSQBRAC ps
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    NEG             shift and go to state 60
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    expression                     shift and go to state 163
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 160

    (25) value -> NEWARRAY LSQBRAC expression RSQBRAC ps .

    END             reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    PLUS            reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    MINUS           reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    TIMES           reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    DIVIDE          reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    MOD             reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    MUL             reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    RPAREN          reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    OR              reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    AND             reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    GT              reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    GTEQ            reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    LT              reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    LTEQ            reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    EQ              reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    NEQ             reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    LCBRAC          reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    RSQBRAC         reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)
    COMMA           reduce using rule 25 (value -> NEWARRAY LSQBRAC expression RSQBRAC ps .)


state 161

    (98) if_statement -> IF expression LCBRAC statement_list RCBRAC . else_statement
    (99) else_statement -> . ELSE else_or_if
    (100) else_statement -> .

    ELSE            shift and go to state 165
    VAR             reduce using rule 100 (else_statement -> .)
    VAL             reduce using rule 100 (else_statement -> .)
    NEWARRAY        reduce using rule 100 (else_statement -> .)
    IF              reduce using rule 100 (else_statement -> .)
    WHILE           reduce using rule 100 (else_statement -> .)
    NEG             reduce using rule 100 (else_statement -> .)
    STRINGV         reduce using rule 100 (else_statement -> .)
    CHARV           reduce using rule 100 (else_statement -> .)
    LPAREN          reduce using rule 100 (else_statement -> .)
    ID              reduce using rule 100 (else_statement -> .)
    MINUS           reduce using rule 100 (else_statement -> .)
    NUMBER          reduce using rule 100 (else_statement -> .)
    REAL            reduce using rule 100 (else_statement -> .)
    BOOLV           reduce using rule 100 (else_statement -> .)
    END             reduce using rule 100 (else_statement -> .)
    RCBRAC          reduce using rule 100 (else_statement -> .)

    else_statement                 shift and go to state 164

state 162

    (103) while_statement -> WHILE expression LCBRAC statement_list RCBRAC .

    VAR             reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    VAL             reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    NEWARRAY        reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    IF              reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    WHILE           reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    NEG             reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    STRINGV         reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    CHARV           reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    LPAREN          reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    ID              reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    MINUS           reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    NUMBER          reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    REAL            reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    BOOLV           reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    END             reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)
    RCBRAC          reduce using rule 103 (while_statement -> WHILE expression LCBRAC statement_list RCBRAC .)


state 163

    (27) ps -> LSQBRAC expression . RSQBRAC ps
    (54) expression -> expression . OR expression
    (55) expression -> expression . AND expression
    (57) expression -> expression . GT expression
    (58) expression -> expression . GTEQ expression
    (59) expression -> expression . LT expression
    (60) expression -> expression . LTEQ expression
    (61) expression -> expression . EQ expression
    (62) expression -> expression . NEQ expression

    RSQBRAC         shift and go to state 166
    OR              shift and go to state 92
    AND             shift and go to state 93
    GT              shift and go to state 94
    GTEQ            shift and go to state 95
    LT              shift and go to state 96
    LTEQ            shift and go to state 97
    EQ              shift and go to state 98
    NEQ             shift and go to state 99


state 164

    (98) if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .

    VAR             reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    VAL             reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    NEWARRAY        reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    IF              reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    WHILE           reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    NEG             reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    STRINGV         reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    CHARV           reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    LPAREN          reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    ID              reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    MINUS           reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    NUMBER          reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    REAL            reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    BOOLV           reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    END             reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)
    RCBRAC          reduce using rule 98 (if_statement -> IF expression LCBRAC statement_list RCBRAC else_statement .)


state 165

    (99) else_statement -> ELSE . else_or_if
    (101) else_or_if -> . LCBRAC statement_list RCBRAC
    (102) else_or_if -> . if_statement
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement

    LCBRAC          shift and go to state 168
    IF              shift and go to state 85

    else_or_if                     shift and go to state 167
    if_statement                   shift and go to state 169

state 166

    (27) ps -> LSQBRAC expression RSQBRAC . ps
    (27) ps -> . LSQBRAC expression RSQBRAC ps
    (28) ps -> .

    LSQBRAC         shift and go to state 159
    END             reduce using rule 28 (ps -> .)
    PLUS            reduce using rule 28 (ps -> .)
    MINUS           reduce using rule 28 (ps -> .)
    TIMES           reduce using rule 28 (ps -> .)
    DIVIDE          reduce using rule 28 (ps -> .)
    MOD             reduce using rule 28 (ps -> .)
    MUL             reduce using rule 28 (ps -> .)
    RPAREN          reduce using rule 28 (ps -> .)
    OR              reduce using rule 28 (ps -> .)
    AND             reduce using rule 28 (ps -> .)
    GT              reduce using rule 28 (ps -> .)
    GTEQ            reduce using rule 28 (ps -> .)
    LT              reduce using rule 28 (ps -> .)
    LTEQ            reduce using rule 28 (ps -> .)
    EQ              reduce using rule 28 (ps -> .)
    NEQ             reduce using rule 28 (ps -> .)
    LCBRAC          reduce using rule 28 (ps -> .)
    RSQBRAC         reduce using rule 28 (ps -> .)
    COMMA           reduce using rule 28 (ps -> .)

    ps                             shift and go to state 170

state 167

    (99) else_statement -> ELSE else_or_if .

    VAR             reduce using rule 99 (else_statement -> ELSE else_or_if .)
    VAL             reduce using rule 99 (else_statement -> ELSE else_or_if .)
    NEWARRAY        reduce using rule 99 (else_statement -> ELSE else_or_if .)
    IF              reduce using rule 99 (else_statement -> ELSE else_or_if .)
    WHILE           reduce using rule 99 (else_statement -> ELSE else_or_if .)
    NEG             reduce using rule 99 (else_statement -> ELSE else_or_if .)
    STRINGV         reduce using rule 99 (else_statement -> ELSE else_or_if .)
    CHARV           reduce using rule 99 (else_statement -> ELSE else_or_if .)
    LPAREN          reduce using rule 99 (else_statement -> ELSE else_or_if .)
    ID              reduce using rule 99 (else_statement -> ELSE else_or_if .)
    MINUS           reduce using rule 99 (else_statement -> ELSE else_or_if .)
    NUMBER          reduce using rule 99 (else_statement -> ELSE else_or_if .)
    REAL            reduce using rule 99 (else_statement -> ELSE else_or_if .)
    BOOLV           reduce using rule 99 (else_statement -> ELSE else_or_if .)
    END             reduce using rule 99 (else_statement -> ELSE else_or_if .)
    RCBRAC          reduce using rule 99 (else_statement -> ELSE else_or_if .)


state 168

    (101) else_or_if -> LCBRAC . statement_list RCBRAC
    (80) statement_list -> . statement_list_end
    (81) statement_list -> . statement_list_iter
    (83) statement_list_end -> . statement
    (82) statement_list_iter -> . statement_list statement
    (84) statement -> . variable_declaration
    (85) statement -> . value END
    (86) statement -> . if_statement
    (87) statement -> . while_statement
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement
    (103) while_statement -> . WHILE expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    VAR             shift and go to state 8
    VAL             shift and go to state 9
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    statement_list                 shift and go to state 171
    statement_list_end             shift and go to state 78
    statement_list_iter            shift and go to state 79
    statement                      shift and go to state 80
    variable_declaration           shift and go to state 81
    value                          shift and go to state 82
    if_statement                   shift and go to state 83
    while_statement                shift and go to state 84
    expression                     shift and go to state 69
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 169

    (102) else_or_if -> if_statement .

    VAR             reduce using rule 102 (else_or_if -> if_statement .)
    VAL             reduce using rule 102 (else_or_if -> if_statement .)
    NEWARRAY        reduce using rule 102 (else_or_if -> if_statement .)
    IF              reduce using rule 102 (else_or_if -> if_statement .)
    WHILE           reduce using rule 102 (else_or_if -> if_statement .)
    NEG             reduce using rule 102 (else_or_if -> if_statement .)
    STRINGV         reduce using rule 102 (else_or_if -> if_statement .)
    CHARV           reduce using rule 102 (else_or_if -> if_statement .)
    LPAREN          reduce using rule 102 (else_or_if -> if_statement .)
    ID              reduce using rule 102 (else_or_if -> if_statement .)
    MINUS           reduce using rule 102 (else_or_if -> if_statement .)
    NUMBER          reduce using rule 102 (else_or_if -> if_statement .)
    REAL            reduce using rule 102 (else_or_if -> if_statement .)
    BOOLV           reduce using rule 102 (else_or_if -> if_statement .)
    END             reduce using rule 102 (else_or_if -> if_statement .)
    RCBRAC          reduce using rule 102 (else_or_if -> if_statement .)


state 170

    (27) ps -> LSQBRAC expression RSQBRAC ps .

    END             reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    PLUS            reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    MINUS           reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    TIMES           reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    DIVIDE          reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    MOD             reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    MUL             reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    RPAREN          reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    OR              reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    AND             reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    GT              reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    GTEQ            reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    LT              reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    LTEQ            reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    EQ              reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    NEQ             reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    LCBRAC          reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    RSQBRAC         reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)
    COMMA           reduce using rule 27 (ps -> LSQBRAC expression RSQBRAC ps .)


state 171

    (101) else_or_if -> LCBRAC statement_list . RCBRAC
    (82) statement_list_iter -> statement_list . statement
    (84) statement -> . variable_declaration
    (85) statement -> . value END
    (86) statement -> . if_statement
    (87) statement -> . while_statement
    (8) variable_declaration -> . VAR declaration END
    (9) variable_declaration -> . VAL declaration END
    (22) value -> . expression
    (23) value -> . stringv
    (24) value -> . charv
    (25) value -> . NEWARRAY LSQBRAC expression RSQBRAC ps
    (26) value -> .
    (98) if_statement -> . IF expression LCBRAC statement_list RCBRAC else_statement
    (103) while_statement -> . WHILE expression LCBRAC statement_list RCBRAC
    (35) expression -> . expression_v PLUS expression
    (36) expression -> . expression_v MINUS expression
    (37) expression -> . expression_v TIMES expression
    (38) expression -> . expression_v DIVIDE expression
    (39) expression -> . expression_v MOD expression
    (40) expression -> . expression_v MUL expression
    (41) expression -> . expression_v
    (42) expression -> . unary_minus_exp
    (54) expression -> . expression OR expression
    (55) expression -> . expression AND expression
    (56) expression -> . NEG expression
    (57) expression -> . expression GT expression
    (58) expression -> . expression GTEQ expression
    (59) expression -> . expression LT expression
    (60) expression -> . expression LTEQ expression
    (61) expression -> . expression EQ expression
    (62) expression -> . expression NEQ expression
    (49) stringv -> . STRINGV
    (50) charv -> . CHARV
    (44) expression_v -> . LPAREN expression RPAREN
    (45) expression_v -> . number
    (46) expression_v -> . real
    (47) expression_v -> . boolv
    (48) expression_v -> . ID array_or_func
    (43) unary_minus_exp -> . MINUS expression
    (51) number -> . NUMBER
    (52) real -> . REAL
    (53) boolv -> . BOOLV

    RCBRAC          shift and go to state 172
    VAR             shift and go to state 8
    VAL             shift and go to state 9
    NEWARRAY        shift and go to state 72
    END             reduce using rule 26 (value -> .)
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    NEG             shift and go to state 60
    STRINGV         shift and go to state 73
    CHARV           shift and go to state 74
    LPAREN          shift and go to state 55
    ID              shift and go to state 64
    MINUS           shift and go to state 58
    NUMBER          shift and go to state 65
    REAL            shift and go to state 66
    BOOLV           shift and go to state 67

    statement                      shift and go to state 118
    variable_declaration           shift and go to state 81
    value                          shift and go to state 82
    if_statement                   shift and go to state 83
    while_statement                shift and go to state 84
    expression                     shift and go to state 69
    stringv                        shift and go to state 70
    charv                          shift and go to state 71
    expression_v                   shift and go to state 57
    unary_minus_exp                shift and go to state 59
    number                         shift and go to state 61
    real                           shift and go to state 62
    boolv                          shift and go to state 63

state 172

    (101) else_or_if -> LCBRAC statement_list RCBRAC .

    VAR             reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    VAL             reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    NEWARRAY        reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    IF              reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    WHILE           reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    NEG             reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    STRINGV         reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    CHARV           reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    LPAREN          reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    ID              reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    MINUS           reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    NUMBER          reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    REAL            reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    BOOLV           reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    END             reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)
    RCBRAC          reduce using rule 101 (else_or_if -> LCBRAC statement_list RCBRAC .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 57 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 57 resolved as shift
WARNING: shift/reduce conflict for MOD in state 57 resolved as shift
WARNING: shift/reduce conflict for MUL in state 57 resolved as shift
WARNING: shift/reduce conflict for OR in state 69 resolved as shift
WARNING: shift/reduce conflict for AND in state 69 resolved as shift
WARNING: shift/reduce conflict for GT in state 69 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for LT in state 69 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for EQ in state 69 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 69 resolved as shift
WARNING: shift/reduce conflict for OR in state 107 resolved as shift
WARNING: shift/reduce conflict for AND in state 107 resolved as shift
WARNING: shift/reduce conflict for GT in state 107 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for LT in state 107 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for EQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 107 resolved as shift
WARNING: reduce/reduce conflict in state 64 resolved using rule (give_value -> <empty>)
WARNING: rejected rule (array_or_func -> <empty>) in state 64
WARNING: reduce/reduce conflict in state 149 resolved using rule (give_value -> <empty>)
WARNING: rejected rule (assg_arr_value -> <empty>) in state 149
WARNING: reduce/reduce conflict in state 149 resolved using rule (give_value -> <empty>)
WARNING: rejected rule (array_or_func -> <empty>) in state 149
WARNING: reduce/reduce conflict in state 156 resolved using rule (assg_arr_value -> give_value)
WARNING: rejected rule (assignment_statement -> give_value) in state 156
WARNING: Rule (array_or_func -> <empty>) is never reduced
WARNING: Rule (assg_arr_value -> <empty>) is never reduced
